<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 6120's Notes</title><link>https://6120.eu/posts/</link><description>Recent content in Posts on 6120's Notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright/><lastBuildDate>Sat, 18 Mar 2023 08:38:51 +0100</lastBuildDate><atom:link href="https://6120.eu/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Analyzing Ordinal Github Issues Part 1</title><link>https://6120.eu/posts/analyzing-ordinal-github-issues/</link><pubDate>Sat, 18 Mar 2023 08:38:51 +0100</pubDate><guid>https://6120.eu/posts/analyzing-ordinal-github-issues/</guid><description>When discovering a new project in order to contribure, the issues are great places to start leaning in. So I went in the Ordinal Github repository to understand what @casey and other ordinals developers as well as other folks ideas and where they wanted to go.
The list of issues is a bit long at the time of writing (2021-03-18) there is 329 issues and 46 pull requests. As a lazy sleep deprived developer I wanted to automate the process of getting the issues and pull requests and then analyze them.</description><content>&lt;p>When discovering a new project in order to contribure, the issues are great places to start leaning in.
So I went in the &lt;a href="https://github.com/casey/ord">Ordinal Github repository&lt;/a> to understand what @casey and other ordinals developers as well as other folks ideas and where they wanted to go.&lt;/p>
&lt;p>The list of issues is a bit long at the time of writing (2021-03-18) there is 329 issues and 46 pull requests. As a &lt;a href="https://en.wikipedia.org/wiki/Lazy_evaluation">lazy&lt;/a> sleep deprived developer I wanted to automate the process of getting the issues and pull requests and then analyze them. I also wanted to do it in a way that I could easily update the data and re-run the analysis. I decided to use the Github API to get the data and then use GPT-4 and GPT-3.5 to generate an overview analysis.&lt;/p>
&lt;h2 id="getting-the-data">Getting the data&lt;/h2>
&lt;p>Using the Github CLI I was able to get the 1MB of data in a json format. I used the following command:&lt;/p>
&lt;p>&lt;img src="https://6120.eu/img/posts/analyzing-ordinal-github-issues/2023-03-18-090742_1308x84_scrot.png" alt="gh issue list &amp;ndash;json number,title,body,labels,updatedAt,comments,reactionGroups -L 400 | pv > issues.json">&lt;/p>
&lt;p>The command is pretty simple, I used the GitHub Command Line Interface (GH CLI) to get the issues and then I used the json flag to get the data in json format. I also used the -L flag to limit the number of issues to 400. I then used pv to get a progress bar and then I redirected the output to a file called issues.json.&lt;/p>
&lt;h2 id="analyzing-the-data">Analyzing the data&lt;/h2>
&lt;p>Example issue:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json"> {
&lt;span style="color:#f92672">&amp;#34;body&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;For the very first time, it was successful to create one inscription, now transactions are not confirmed, I suspect because of the small fee rate\r\n\r\n&amp;lt;img width=\&amp;#34;557\&amp;#34; alt=\&amp;#34;Снимок экрана 2023-03-11 в 21 30 29\&amp;#34; src=\&amp;#34;https://user-images.githubusercontent.com/53757772/224508408-186dad47-3935-4ad7-8032-5985409a87ff.png\&amp;#34;&amp;gt;\r\n\r\n&amp;lt;img width=\&amp;#34;804\&amp;#34; alt=\&amp;#34;Снимок экрана 2023-03-11 в 21 35 40\&amp;#34; src=\&amp;#34;https://user-images.githubusercontent.com/53757772/224508424-16d5f897-0e83-4a04-8c32-73930e2527fe.png\&amp;#34;&amp;gt;\r\n\r\nThe balance is completely debited\r\n\r\n&amp;lt;img width=\&amp;#34;563\&amp;#34; alt=\&amp;#34;Снимок экрана 2023-03-11 в 21 36 35\&amp;#34; src=\&amp;#34;https://user-images.githubusercontent.com/53757772/224508755-b202f4e0-dd2e-40cc-bea2-cdd10522bbe8.png\&amp;#34;&amp;gt;\r\n\r\n&amp;lt;img width=\&amp;#34;570\&amp;#34; alt=\&amp;#34;Снимок экрана 2023-03-11 в 21 37 04\&amp;#34; src=\&amp;#34;https://user-images.githubusercontent.com/53757772/224508790-e461a21c-8f2e-4a51-962f-cf6171d4b56e.png\&amp;#34;&amp;gt;\r\n\r\nhttps://mempool.space/tx/b8d7cd6ba8e2c3387d6c1dfd33ef542ed82aa36425a9a7c2f903a803aaca7015\r\n\r\n\r\n\r\n\r\n\r\nHelp me )&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;comments&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;IC_kwDOGhOAhc5XuYTN&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;author&amp;#34;&lt;/span>: {&lt;span style="color:#960050;background-color:#1e0010">H&lt;/span>
&lt;span style="color:#f92672">&amp;#34;login&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ysw1011&amp;#34;&lt;/span>
},
&lt;span style="color:#f92672">&amp;#34;authorAssociation&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;NONE&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;body&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;你需要设置fee：./ord --wallet tord wallet inscribe 1.html --fee-rate 6，但是你没有，所以你只能等，有一个清除本地内存池交易的bitcoin cli命令，但是我不建议你用，因为会把你钱包里数据给搞丢。所以你只能等。或者创建一个新钱包，把当前钱包余额转过去 同来产生新的UTXO&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;createdAt&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2023-03-16T11:26:11Z&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;includesCreatedEdit&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;isMinimized&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;minimizedReason&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;reactionGroups&amp;#34;&lt;/span>: [{
&lt;span style="color:#f92672">&amp;#34;content&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;THUMBS_UP&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;users&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;totalCount&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
}}],
&lt;span style="color:#f92672">&amp;#34;url&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://github.com/casey/ord/issues/1917#issuecomment-1471775949&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;viewerDidAuthor&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
}
],
&lt;span style="color:#f92672">&amp;#34;labels&amp;#34;&lt;/span>: [],
&lt;span style="color:#f92672">&amp;#34;number&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1917&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;title&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Transactions are not confirmed&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;updatedAt&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2023-03-16T11:26:11Z&amp;#34;&lt;/span>
}&lt;span style="color:#960050;background-color:#1e0010">,&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is what look a typical issue in global FOSS repository, where there is no strict guidelines for contributing and users can open issues for anything. The content of the issue contains also multiple languages which could be a challenge for the reviewer.&lt;/p>
&lt;h1 id="ai-for-the-rescue">AI for the rescue&lt;/h1>
&lt;p>After learning a lot about prompt engineering over the last months I decided to write myself the prompt to generate the overview analysis. After fidling with a few prompt for a while I was not able to get a decent result. I then decided to use GPT4 to generate the prompt for GPT3 analysis as unfortunatly, GPT4, is not available over the API yet.
But who no better to talk to a robot than another robot?&lt;/p>
&lt;p>&lt;img src="https://6120.eu/img/posts/analyzing-ordinal-github-issues/2023-03-18-090255_1180x1594_scrot.png" alt="Only robots can understand me.">&lt;/p>
&lt;p>This gives a prompt that&amp;rsquo;s quite effective at generating a usable JSON outputs.
With a few logics and a simple use of the OpenAI python package.
&lt;img src="https://6120.eu/img/posts/analyzing-ordinal-github-issues/2023-03-18-094526_1579x209_scrot.png" alt="simple openai api call">&lt;/p>
&lt;p>I was able to generate a nice overview of the issues.
&lt;img src="https://6120.eu/img/posts/analyzing-ordinal-github-issues/2023-03-18-080232_3650x783_scrot.png" alt="">&lt;/p>
&lt;p>And even get some insights about which issues are hot topics.
&lt;img src="https://6120.eu/img/posts/analyzing-ordinal-github-issues/2023-03-18-090208_1272x258_scrot.png" alt="">&lt;/p>
&lt;h1 id="conclusion">Conclusion&lt;/h1>
&lt;p>It&amp;rsquo;s a simple tool to help get an overview of the issues in a repository. It helps to get in the know before diving the details but there are some limitation to this simple example:&lt;/p>
&lt;ul>
&lt;li>The limitation encountered was the model, the only one available is GPT3 which is the legacy one&lt;/li>
&lt;li>The number of tokens you can feed the model, even with a larger model there is a limitation therefor a compression on the body and comments could be applied when number of token feed is close to the model limitation&lt;/li>
&lt;li>The prompt is not perfect, sometimes it&amp;rsquo;s does not generate a valid JSON output, but it&amp;rsquo;s a good start.&lt;/li>
&lt;/ul>
&lt;p>Was it worth it? I think so, leaning in a project is a time consuming activity and not that much productive in terms of deliverables.
Here it took me 6 hours to get a deliverable, the software to produce it while giving me a shareable quick overview of a large corpus of various issues in the repository. And the OPEX development cost was almost zero.&lt;/p>
&lt;p>&lt;img src="https://6120.eu/img/posts/analyzing-ordinal-github-issues/2023-03-18-090227_857x138_scrot.png" alt="cost">&lt;/p>
&lt;h1 id="links">Links&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Magicking/openai-issues-analysis/">Source code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Magicking/openai-issues-analysis/blob/main/classifiedIssue.json">Raw output of the analysis&lt;/a>, you can use &lt;a href="https://stedolan.github.io/jq/">jq&lt;/a> to filter the output, see example below.
&lt;pre tabindex="0">&lt;code>.[] | select(.reactionGroups != {}) | &amp;quot;\(.number): \(.title): Reaction: \(.reactionGroups)&amp;quot;```)&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul></content></item><item><title>StarkNet &amp; Cairo significant changes developer opinionated view</title><link>https://6120.eu/posts/cairo-changelog-pov/</link><pubDate>Fri, 03 Feb 2023 19:00:03 +0100</pubDate><guid>https://6120.eu/posts/cairo-changelog-pov/</guid><description>What&amp;rsquo;s new in Cairo? There have been a lot of changes since the Cairo language has been released. This is a developer opinionated list of the major changes since the first release, 0.6.2 (Dec 2021).
StarkWareLtd last release CairoLang v0.10.3 (Dec 5, 2022) also named Cairo 1.0.
Useful links:
CairoLang releases Useful info from StarkNet documentation StarkNet Community Call #32 Upcoming versions v0.10. (Cairo 1.0) (breaking changes version) Dec.</description><content>&lt;h1 id="whats-new-in-cairo">What&amp;rsquo;s new in Cairo?&lt;/h1>
&lt;p>There have been a lot of changes since the Cairo language has been released. This is a developer opinionated list of the major changes since the first release, 0.6.2 (Dec 2021).&lt;/p>
&lt;p>StarkWareLtd last release CairoLang v0.10.3 (Dec 5, 2022) also named Cairo 1.0.&lt;/p>
&lt;p>Useful links:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/starkware-libs/cairo-lang/releases">CairoLang releases&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.starknet.io/documentation/useful_info/">Useful info&lt;/a> from StarkNet documentation&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=CKYM25oicTA">StarkNet Community Call #32&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.starknet.io/documentation/starknet_versions/upcoming_versions/">Upcoming versions&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="v010-cairo-10">v0.10. (Cairo 1.0)&lt;/h1>
&lt;p>(breaking changes version)
&lt;strong>Dec. 5 2022&lt;/strong> v0.10.0-pre Pre-release&lt;/p>
&lt;p>Starknet has its core language modified, it&amp;rsquo;s now a Rusty lang, Starknet foresaw the future of Rust based smart-contract ecosystem (&lt;a href="https://news.coincu.com/90055-fall-of-terra/">Luna developers&lt;/a> and Solana)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>End statements with ;&lt;/p>
&lt;ul>
&lt;li>Note that new lines are still part of the language at this point, and you cannot put more than one instruction per line. This will change in Cairo1.0.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Use { … } for code blocks (instead of : and end)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add () around the condition of if statements&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Remove the member keyword in structs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Change comment to use // instead of #&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use &amp;hellip;, ap++ instead of &amp;hellip;; ap++ in low level Cairo code&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New transaction version&lt;/p>
&lt;ul>
&lt;li>Nonce are enforced as part of the transaction (bye bye UTXO model)&lt;/li>
&lt;li>Invoke execution object with &lt;a href="https://github.com/OpenZeppelin/cairo-contracts/blob/d12abf335f5c778fd19d6f99e91c099b40865deb/src/openzeppelin/account/presets/EthAccount.cairo#L81">&lt;strong>__validate__&lt;/strong>&lt;/a> and &lt;a href="https://github.com/OpenZeppelin/cairo-contracts/blob/d12abf335f5c778fd19d6f99e91c099b40865deb/src/openzeppelin/account/presets/EthAccount.cairo#L127">&lt;strong>__execute__&lt;/strong>&lt;/a> to differentiate between validation of the transaction (wether or not execution works (TODO: wild guess)) and execution that his pickup by another part of the process in the decentralized system(TODO: confirm)&lt;/li>
&lt;li>Declare function to send implementation code for registration for future instantiation&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Bridge Layer1 to Layer2&lt;/p>
&lt;ul>
&lt;li>New &lt;strong>fee&lt;/strong> field in &lt;a href="https://github.com/starkware-libs/cairo-lang/blob/54d7e92a703b3b5a1e07e9389608178129946efc/src/starkware/starknet/solidity/IStarknetMessagingEvents.sol#L9">LogMessageToL2 event&lt;/a> when executing L2 contract from L1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Tx simulation and fee estimation&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Support the EC-op builtin. to allows to verify ECDSA signatures&lt;/p>
&lt;/li>
&lt;li>
&lt;p>API: Remove entry_point_type field from transaction information&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="v09x">v0.9.x&lt;/h1>
&lt;p>Fees are now enforced on StarkNet, no more free candy!&lt;/p>
&lt;p>Contracts must be declared first and then instanciated through the new &lt;a href="https://starknet.io/docs/hello_starknet/deploying_from_contracts.html#the-deploy-system-call">deploy syscall&lt;/a> forcing 2 manual transactions for contracts deployed by EOA.&lt;/p>
&lt;h1 id="v081">v0.8.1&lt;/h1>
&lt;p>Fees are in now! What&amp;rsquo;s up with that &lt;a href="https://github.com/starkware-libs/cairo-lang/blob/4e233516f52477ad158bc81a86ec2760471c1b65/src/starkware/starknet/business_logic/transaction_fee.py">code&lt;/a> ? See more &lt;a href="https://starknet.io/documentation/fee-mechanism/#Introduction">here&lt;/a>.
&lt;img src="https://i.imgur.com/G2ZidCf.png" alt="">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>charge_fee &lt;img src="https://i.imgur.com/GnKEkFI.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>calculate_tx_fee_by_cairo_usage &lt;img src="https://i.imgur.com/wYIohf7.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/eth/StarknetMessaging.sol">L1 -&amp;gt; L2 message cancellation&lt;/a>
&lt;img src="https://i.imgur.com/P4UB8Wm.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>version&lt;/code> and &lt;code>max_fee&lt;/code> are part of the transaction structure now&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>__execute__&lt;/code> is now required mandatory entry point for account contract, see more &lt;a href="https://github.com/OpenZeppelin/cairo-contracts/blob/main/docs/Account.md#accounts">here&lt;/a>
&lt;img src="https://i.imgur.com/gIcuAdK.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added the cryptographic hash function &lt;a href="https://en.wikipedia.org/wiki/BLAKE_(hash_function)">blake2s&lt;/a> to the standard library&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="cairo">Cairo&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Meaningful error messaging(v0.7.0) including local variables and arguments
&lt;img src="https://i.imgur.com/AwjYaIV.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>High level memory allocation with the &lt;code>new&lt;/code> keyword in execution memory segment (whereas &lt;code>alloc&lt;/code> allocates a new memory segment)
&lt;img src="https://i.imgur.com/gFPTHzw.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Tuples and type aliases, will increase the pythonic vibes of Cairo even further
&lt;img src="https://i.imgur.com/Ya3bPcE.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fix for python 3.9&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="v07x">v0.7.x&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/starkware-libs/cairo-lang/blob/4e233516f52477ad158bc81a86ec2760471c1b65/src/starkware/starknet/services/api/messages.py#L80">Added a nonce for L1 to L2 message&lt;/a> this prevents sending the same message twice from the EVM world, e.g: calling a function.
&lt;img src="https://i.imgur.com/3SPa5Fz.png" alt="">&lt;/li>
&lt;/ul>
&lt;h1 id="addition-of-evm-compatibilities">Addition of EVM compatibilities&lt;/h1>
&lt;ul>
&lt;li>events are here !&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/rXdCLNc.png" alt="">
&lt;img src="https://i.imgur.com/uOzGLmA.png" alt="">&lt;/p>
&lt;p>(editor&amp;rsquo;s note: TheGraph but for StarkNet please.)&lt;/p>
&lt;ul>
&lt;li>delegate calls
prepend delegate_ to external contract function name or &lt;code>l1_handler&lt;/code>&lt;/li>
&lt;li>The &lt;code>__default__&lt;/code> entry point is introduced, it is similar to the Solidity fallback method as it is executed after missing on the function selector.&lt;/li>
&lt;li>The &lt;code>__l1_default__&lt;/code> entry point same as &lt;code>__default__&lt;/code> but for in-protocol message from the L1.&lt;/li>
&lt;/ul>
&lt;h2 id="new-syscalls">New syscalls&lt;/h2>
&lt;ul>
&lt;li>get_block_timestamp()
Returns a random number that sometimes appears to grow over time, currently around since 1970-01-01.
Notice of deprecation for get_tx_signature(), get_tx_info() is now preferred.&lt;/li>
&lt;/ul></content></item><item><title>Support cours Ethereum Virtual Machine</title><link>https://6120.eu/posts/support-evm/</link><pubDate>Thu, 17 Mar 2022 21:50:00 +0100</pubDate><guid>https://6120.eu/posts/support-evm/</guid><description>Ceci est un support de cours sur l&amp;rsquo;EVM (Ethereum Virtual Machine) pour le cours de l&amp;rsquo;Ecole Supérieure d&amp;rsquo;Ingénieurs Léonard de Vinci (ESILV).
Il comprend du matériel de cours, des illustrations et des liens vers des ressources.
La durée du cours est de 3h, séparé en une lesson de 1h15 et des travaux dirigés de 1h15. La première partie est une introduction à la machine de Turing et sa correspondance aux processeurs de nos jours (rappel des connaissances), la seconde partie est une introduction à l&amp;rsquo;EVM et sa correspondance avec la machine de Turing.</description><content>&lt;p>Ceci est un support de cours sur l&amp;rsquo;EVM (Ethereum Virtual Machine) pour le cours de l&amp;rsquo;Ecole Supérieure d&amp;rsquo;Ingénieurs Léonard de Vinci (ESILV).&lt;/p>
&lt;p>Il comprend du matériel de cours, des illustrations et des liens vers des ressources.&lt;/p>
&lt;p>La durée du cours est de 3h, séparé en une lesson de 1h15 et des travaux dirigés de 1h15.
La première partie est une introduction à la machine de Turing et sa correspondance aux processeurs de nos jours (rappel des connaissances),
la seconde partie est une introduction à l&amp;rsquo;EVM et sa correspondance avec la machine de Turing.&lt;/p>
&lt;p>Les travaux pratiques consistent à observer le fonctionnement de l&amp;rsquo;EVM ainsi que la lecture des &lt;a href="https://www.evm.codes/">opcodes&lt;/a> au travers du debugger &lt;a href="https://remix.ethereum.org/">Remix&lt;/a> et à implémenter des opcodes directement dans un second temps.&lt;/p>
&lt;p>NB: Tenderly peut-être utilisé pour une meilleure observervation du fonctionnement de l&amp;rsquo;EVM sur la blockchain Ethereum mais est un peu plus long à mettre en place.&lt;/p>
&lt;h1 id="machine-de-turing">Machine de Turing&lt;/h1>
&lt;p>Machine de Turing
&lt;img src="https://6120.eu/img/posts/support-evm/mThs6b2.jpg" alt="">
&lt;a href="https://www.youtube.com/watch?v=L5O04P2ASRc&amp;amp;t=647s">https://www.youtube.com/watch?v=L5O04P2ASRc&amp;amp;t=647s&lt;/a>&lt;/p>
&lt;h1 id="ethereum-virtual-machine-evm">Ethereum Virtual Machine (EVM)&lt;/h1>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/ysIsVUG.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/Xba9Jwb.png" alt="">&lt;/p>
&lt;hr>
&lt;p>Lexiques
&lt;a href="https://github.com/asseth/yellowpaper/blob/7dd3ed26b6fe4b7a1b0394194ef268d01f9955b4/Paper.pdf">https://github.com/asseth/yellowpaper/blob/7dd3ed26b6fe4b7a1b0394194ef268d01f9955b4/Paper.pdf&lt;/a> Page 17&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/Lo0fP89.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/8cOg89m.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/vRJgorg.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/tMgjFeK.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/cnV0k5f.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/0J3imfd.png" alt="">&lt;/p>
&lt;hr>
&lt;p>Dive in &lt;a href="http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf">http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf&lt;/a>&lt;/p>
&lt;h2 id="illustration">Illustration&lt;/h2>
&lt;ul>
&lt;li>Illustration Turing machine =&amp;gt; &lt;a href="https://medium.com/creative-automata/classic-turing-machine-with-tape-erasure-e14870ad154e">https://medium.com/creative-automata/classic-turing-machine-with-tape-erasure-e14870ad154e&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf">http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="bibliography">Bibliography&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>🇫🇷 &lt;a href="https://github.com/asseth/yellowpaper/blob/7dd3ed26b6fe4b7a1b0394194ef268d01f9955b4/Paper.pdf">EIP-150 Yellowpaper&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>🇬🇧 &lt;a href="https://ethereum.github.io/yellowpaper/paper.pdf">Updated Yellowpaper&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/benjaminion/YellowPaper_CheatSheet">Yellowpaper Cheat Sheet&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf">Ethereum EVM Illustrated&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Execution model Page 56&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="implementation">Implementation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ethereum/go-ethereum/blob/master/core/vm/interpreter.go#L138">Implementation allocation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="travaux-dirigés">Travaux dirigés&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://remix.ethereum.org/">Remix&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.evm.codes/">EVM opcodes&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Solidity sources to analyze:&lt;/p>
&lt;ul>
&lt;li>Goal, observe the behavior of the EVM between the differents implementation functions of the same algorithm:
&lt;ul>
&lt;li>Sum of an array of uint.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-solidity" data-lang="solidity">&lt;span style="color:#75715e">// SPDX-License-Identifier: GPL-3.0
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">pragma solidity&lt;/span> &lt;span style="color:#f92672">&amp;gt;=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">4&lt;/span>.&lt;span style="color:#ae81ff">16&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">9&lt;/span>.&lt;span style="color:#ae81ff">0&lt;/span>;
&lt;span style="color:#66d9ef">library&lt;/span> VectorSum {
&lt;span style="color:#75715e">// This function is less efficient because the optimizer currently fails to
&lt;/span>&lt;span style="color:#75715e">// remove the bounds checks in array access.
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">sumSolidity&lt;/span>(&lt;span style="color:#66d9ef">uint&lt;/span>[] &lt;span style="color:#66d9ef">memory&lt;/span> data) &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">pure&lt;/span> &lt;span style="color:#66d9ef">returns&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> sum) {
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> data.length; &lt;span style="color:#f92672">++&lt;/span>i)
sum &lt;span style="color:#f92672">+=&lt;/span> data[i];
}
&lt;span style="color:#75715e">// We know that we only access the array in bounds, so we can avoid the check.
&lt;/span>&lt;span style="color:#75715e">// 0x20 needs to be added to an array because the first slot contains the
&lt;/span>&lt;span style="color:#75715e">// array length.
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">sumAsm&lt;/span>(&lt;span style="color:#66d9ef">uint&lt;/span>[] &lt;span style="color:#66d9ef">memory&lt;/span> data) &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">pure&lt;/span> &lt;span style="color:#66d9ef">returns&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> sum) {
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> data.length; &lt;span style="color:#f92672">++&lt;/span>i) {
&lt;span style="color:#66d9ef">assembly&lt;/span> {
sum &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(sum, &lt;span style="color:#a6e22e">mload&lt;/span>(&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#a6e22e">add&lt;/span>(data, &lt;span style="color:#ae81ff">0x20&lt;/span>), &lt;span style="color:#a6e22e">mul&lt;/span>(i, &lt;span style="color:#ae81ff">0x20&lt;/span>))))
}
}
}
&lt;span style="color:#75715e">// Same as above, but accomplish the entire code within inline assembly.
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">sumPureAsm&lt;/span>(&lt;span style="color:#66d9ef">uint&lt;/span>[] &lt;span style="color:#66d9ef">memory&lt;/span> data) &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">pure&lt;/span> &lt;span style="color:#66d9ef">returns&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> sum) {
&lt;span style="color:#66d9ef">assembly&lt;/span> {
&lt;span style="color:#75715e">// Load the length (first 32 bytes)
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">let&lt;/span> len &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">mload&lt;/span>(data)
&lt;span style="color:#75715e">// Skip over the length field.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Keep temporary variable so it can be incremented in place.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// NOTE: incrementing data would result in an unusable
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// data variable after this assembly block
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">let&lt;/span> dataElementLocation &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(data, &lt;span style="color:#ae81ff">0x20&lt;/span>)
&lt;span style="color:#75715e">// Iterate until the bound is not met.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">for&lt;/span>
{ &lt;span style="color:#f92672">let&lt;/span> end &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(dataElementLocation, &lt;span style="color:#a6e22e">mul&lt;/span>(len, &lt;span style="color:#ae81ff">0x20&lt;/span>)) }
&lt;span style="color:#a6e22e">lt&lt;/span>(dataElementLocation, end)
{ data &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(dataElementLocation, &lt;span style="color:#ae81ff">0x20&lt;/span>) }
{
sum &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(sum, &lt;span style="color:#a6e22e">mload&lt;/span>(dataElementLocation))
}
}
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="contact">Contact&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://twitter.com/magicking_">@magicking_&lt;/a>&lt;/li>
&lt;li>&lt;a href="mailto:s@6120.eu">s@6120.eu&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://6120.eu">https://6120.eu&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Altfury a remote wallet provider (GSaaS*) design document - Work In Progress</title><link>https://6120.eu/posts/altfury/</link><pubDate>Sat, 13 Feb 2021 19:00:03 +0100</pubDate><guid>https://6120.eu/posts/altfury/</guid><description>Motivationale With around 2000 DApps and more than 60.000 users, the promise of 27.000 tx/s with Ethereum 2.0 and people arguing for Infura centralizing the public Ethereum world there is call for alternative! Altfury aims to provide to anyone the ability to interact with DApps and any smart contract without the need of paying gas.
Your user don&amp;rsquo;t have a wallet?
You can let us take care of your keys and the burden to not forget and secure them while enjoying the DeFi space faster than ever.</description><content>&lt;h2 id="motivationale">Motivationale&lt;/h2>
&lt;p>With around &lt;a href="https://dappradar.com/rankings/protocol/ethereum/87">2000 DApps&lt;/a> and more than &lt;a href="https://dappradar.com/rankings/protocol/ethereum">60.000 users&lt;/a>, the promise of 27.000 tx/s with Ethereum 2.0 and people arguing for Infura centralizing the public Ethereum world there is call for alternative!
Altfury aims to provide to anyone the ability to interact with DApps and any smart contract without the need of paying gas.&lt;/p>
&lt;p>Your user don&amp;rsquo;t have a wallet?&lt;/p>
&lt;p>You can let us take care of your keys and the burden to not forget and secure them while enjoying the DeFi space faster than ever.
DApp developers, the Ethereum world to your users with only the change of your endpoint URL address.
Users, hassle free access to the DeFi world&lt;/p>
&lt;p>No burden to use a new SDK in your DApps, work with standard Wallet Connect (Uniswap &amp;amp; al)!
Peepz, just to go the website (optional install browser extension) pair up and go!&lt;/p>
&lt;p>*Gas Station As A Service (GSAAS)&lt;/p>
&lt;h1 id="intro">Intro&lt;/h1>
&lt;p>The goal of this document is to provide a design of a high-available service providing Ethereum JSON RPC endpoints over HTTP and HTTP WebSocket and other related services such as fee (tx) management to act as a drop-in repleacement (or plugin to existing wallet connectors).&lt;/p>
&lt;h3 id="technical-note">Technical note&lt;/h3>
&lt;p>In addition, the endpoint SHOULD allow:&lt;/p>
&lt;ul>
&lt;li>For unfunded Ethereum account to pass transaction on the blockchain under certain condition
Withhold transaction then&lt;/li>
&lt;li>Guaranteed transaction inclusion with low gas price fee
For this specific feature, there is multiple ways to achieve this
Pass transaction off-band to a partner miner pool that would accept transaction with a &lt;strong>gasPrice&lt;/strong> set at &lt;strong>0&lt;/strong> &lt;em>or&lt;/em> fund the account via a faucet to the &lt;strong>gasLimit&lt;/strong> x &lt;strong>gasPrice&lt;/strong> while withholding
the transaction until funding is done and then propagate it.&lt;/li>
&lt;/ul>
&lt;h2 id="definition">Definition&lt;/h2>
&lt;p>A remote wallet provider is a service that aims to help distant services to execute(read calls), sign(key control) and transmit transaction(write calls)&lt;/p>
&lt;p>It integrate seamlessly by emulating a blockchain state with a balance corresponding for the credit of each account creating an ephemeral blockchain network (next_view(state, account_balances)-&amp;gt;fork_view, a fork of the mainnet displaying accounts as if they have the corresponding amount making the experience seamless as&lt;/p>
&lt;h2 id="customers">Customers&lt;/h2>
&lt;ul>
&lt;li>Bots&lt;/li>
&lt;li>NoCode users&lt;/li>
&lt;li>User that click on interface (browser extension, &lt;a href="https://twitter.com/P3b7_/status/1361345964259352580?s=19">https://twitter.com/P3b7_/status/1361345964259352580?s=19&lt;/a>)&lt;/li>
&lt;li>User willing to invest to rely on this for automation&lt;/li>
&lt;li>User that do their on smart contract automation&lt;/li>
&lt;/ul>
&lt;p>Todo do market research to describe personas&lt;/p>
&lt;h2 id="future-of-work">Future of work&lt;/h2>
&lt;ul>
&lt;li>Provide services about key usage (defi liquidity mining, &amp;hellip;)&lt;/li>
&lt;/ul>
&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>SHOULD be as minimal as possible to have a low footprint/cost
(front-end requests (administration, user management, &amp;hellip;)).
Use go-ethereum as library to avoid technical debt as much as possible.&lt;/p>
&lt;p>-&amp;gt; Wondering if serverless could be a benefit if it were handling execution read calls, this might be costly if not self-hosted&lt;/p>
&lt;p>-&amp;gt; Browser extention to change the RPC endpoint easily
-&amp;gt; Ledger device with dedicated credit app
-&amp;gt; Website where account can be toped-up by XXX means&lt;/p>
&lt;h1 id="security">Security&lt;/h1>
&lt;p>Per ethereum account (extracted from transaction signature) whitelisting.
Per application(what), per logged user (who)
Anonymous user SHOULD be limited by IP(Handle IPv6 per /64 block?):&lt;/p>
&lt;ul>
&lt;li>Rate in second&lt;/li>
&lt;li>Total number of concurrent connection&lt;/li>
&lt;li>Time limit on connection&lt;/li>
&lt;/ul>
&lt;p>USER_TYPE:&lt;/p>
&lt;ul>
&lt;li>LOW_GASER&lt;/li>
&lt;li>TO_FUND_ACCOUNT&lt;/li>
&lt;li>ANONYMOUS&lt;/li>
&lt;/ul>
&lt;h1 id="new-usages-possible-out-of-that">New usages possible out of that&lt;/h1>
&lt;ul>
&lt;li>Send NFT anonymously via TornadoCash integration&lt;/li>
&lt;/ul>
&lt;h2 id="allowed-usage-pattern">Allowed usage pattern&lt;/h2>
&lt;ul>
&lt;li>Authorize (max amount?)&lt;/li>
&lt;li>Trade&lt;/li>
&lt;li>Trade&lt;/li>
&lt;li>&amp;hellip; max amount before security callbacks?&lt;/li>
&lt;/ul>
&lt;h2 id="regulatory-limits">Regulatory limits&lt;/h2>
&lt;p>Is this such a thing for DeFi?
Tax?&lt;/p>
&lt;h2 id="fraud-prevention--whitelisting-system">Fraud prevention / whitelisting system&lt;/h2>
&lt;p>Smart-contract based?&lt;/p>
&lt;h3 id="providing-an-ephemeral-ethereum-state">Providing an ephemeral ethereum state&lt;/h3>
&lt;ul>
&lt;li>Modify &lt;a href="https://github.com/ledgerwatch/turbo-geth/blob/master/consensus/ethash/sealer.go#L166">https://github.com/ledgerwatch/turbo-geth/blob/master/consensus/ethash/sealer.go#L166&lt;/a> to wait on a channel instead of searching for the nonce and set a MAGIC MixDigest to permit identification of a special block to be included on the canonical chain without verification&lt;/li>
&lt;li>Prevent MAGIC block propagation throught&lt;/li>
&lt;/ul>
&lt;h1 id="transaction-payment-to-miner">Transaction payment to miner&lt;/h1>
&lt;p>The payment is distributed to the block.coinbase each block containing private transaction (and potentially a lower than usual gas price)&lt;/p>
&lt;p>Todo expand idea of private transaction via on-chain payment -&amp;gt; find a settlement cost minimal (ticket+payment channel)&lt;/p>
&lt;h3 id="transaction-flow">Transaction flow&lt;/h3>
&lt;h4 id="write-flows">Write flows&lt;/h4>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">sequenceDiagram
participant User
participant EVM Service
participant Eth node
activate EVM Service
User-&amp;gt;&amp;gt;EVM Service: eth_sendRawTransaction
EVM Service-&amp;gt;&amp;gt;EVM Service: Classify user type
EVM Service-&amp;gt;EVM Service: Apply rate limit
opt if user is TO_FUND_ACCOUNT type
EVM Service-&amp;gt;EVM Service: Apply funding TX to txpool
end
opt if user is LOW_GASER
EVM Service-&amp;gt;EVM Service: Disable gasPrice limit
end
EVM Service-&amp;gt;EVM Service: Verify TX against txpool
activate Eth node
EVM Service--&amp;gt;&amp;gt;Eth node: Propagate funding transaction for TO_FUND_ACCOUNT user
EVM Service--&amp;gt;&amp;gt;EVM Service: Wait for funding settlement for TO_FUND_ACCOUNT user
alt Private or public transaction
EVM Service-&amp;gt;&amp;gt;Eth node: Propagate user transaction
deactivate Eth node
else
EVM Service--&amp;gt;&amp;gt;Miner pool: Dispatch transaction for LOW_GASER user
end
deactivate EVM Service
&lt;/code>&lt;/pre>&lt;h4 id="read-flows">Read flows&lt;/h4>
&lt;p>Todo&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>&lt;a href="https://docs.google.com/spreadsheets/d/1iOHnC1MkwcXxN-Gisk9nWeWIRfR6ZaWAXLtYL37NCzE/edit?pli=1#gid=0">Pricing&lt;/a>
&lt;a href="https://github.com/ethereum/wiki/wiki/JSON-RPC">https://github.com/ethereum/wiki/wiki/JSON-RPC&lt;/a>
&lt;a href="https://www.stateofthedapps.com/stats">https://www.stateofthedapps.com/stats&lt;/a>&lt;/p>
&lt;h2 id="ethereum-rpc">Ethereum RPC&lt;/h2>
&lt;h3 id="modified-rpc">Modified RPC&lt;/h3>
&lt;p>&lt;strong>eth_call&lt;/strong> due to &lt;code>gasPrice&lt;/code> parameter
&lt;strong>eth_estimateGas&lt;/strong> due to &lt;code>gasPrice&lt;/code> parameter&lt;/p>
&lt;h4 id="eth_gasprice">eth_gasPrice&lt;/h4>
&lt;p>Should reflect the gasPrice we want either low or high depending of the kind of transaction we expect to see either through a miner pool or pre-funding.&lt;/p>
&lt;h4 id="eth_sendrawtransaction">eth_sendRawTransaction&lt;/h4>
&lt;p>Custom implementation of this RPC, depending on USER_TYPE&lt;/p>
&lt;h3 id="non-stream-rpc">Non stream RPC&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>eth_accounts&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_blockNumber&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_call&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_chainId&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBalance&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBlockByHash&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBlockByNumber&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBlockTransactionCountByHash&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBlockTransactionCountByNumber&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getCode&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getLogs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getStorageAt&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionByBlockHashAndIndex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionByBlockNumberAndIndex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionByHash&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionCount&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionReceipt&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getUncleByBlockHashAndIndex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getUncleByBlockNumberAndIndex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getUncleCountByBlockHash&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getUncleCountByBlockNumber&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getWork&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_hashrate&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_mining&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_protocolVersion&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_submitWork&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_syncing&lt;/p>
&lt;/li>
&lt;li>
&lt;p>net_listening&lt;/p>
&lt;/li>
&lt;li>
&lt;p>net_peerCount&lt;/p>
&lt;/li>
&lt;li>
&lt;p>net_version&lt;/p>
&lt;/li>
&lt;li>
&lt;p>web3_clientVersion&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="streams-rpc">Streams RPC&lt;/h3>
&lt;ul>
&lt;li>eth_newFilter&lt;/li>
&lt;li>eth_newPendingTransactionFilter&lt;/li>
&lt;li>eth_getFilterChanges&lt;/li>
&lt;li>eth_getFilterLogs&lt;/li>
&lt;li>eth_uninstallFilter&lt;/li>
&lt;li>eth_subscribe&lt;/li>
&lt;li>eth_unsubscribe&lt;/li>
&lt;/ul>
&lt;h2 id="notes">Notes&lt;/h2>
&lt;ul>
&lt;li>Fast Transaction Pool, low latency viewer / transaction sender&lt;/li>
&lt;li>Connect to peers, fetch memory pool, behave as light relay node&lt;/li>
&lt;li>Provide transaction mempool view and fast transaction dispatching&lt;/li>
&lt;li>Populate a central database for constant time access via API (paid access ?)&lt;/li>
&lt;li>Monitor transaction to addresses, on update&lt;/li>
&lt;li>Callback to backend customers through a fast protocol (GRPC?REST?&amp;hellip;?)&lt;/li>
&lt;li>Trigger registered function (e.g: send transaction)&lt;/li>
&lt;li>World infrastructure required (node in each world, potentially costly + dev ops)&lt;/li>
&lt;li>Dashboard with world view of ethereum compatible blockchain&lt;/li>
&lt;li>Speed transaction sending for quick transaction dispatching&lt;/li>
&lt;li>Would require ethereum node modification&lt;/li>
&lt;/ul></content></item><item><title>Update from last blog</title><link>https://6120.eu/posts/wip/</link><pubDate>Fri, 03 Aug 2001 00:00:00 +0000</pubDate><guid>https://6120.eu/posts/wip/</guid><description>Work in progress™ Work in progress™ since 2001.</description><content>&lt;h1 id="work-in-progress">Work in progress™&lt;/h1>
&lt;p>Work in progress™ since &lt;a href="https://web.archive.org/web/20011203211125/http://progcity.free.fr/">2001&lt;/a>.&lt;/p></content></item></channel></rss>