<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>6120's Blog</title><link>/</link><description>Recent content on 6120's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright/><lastBuildDate>Fri, 03 Feb 2023 19:00:03 +0100</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>StarkNet &amp; Cairo significant changes developer opinionated view</title><link>/posts/cairo-changelog-pov/</link><pubDate>Fri, 03 Feb 2023 19:00:03 +0100</pubDate><guid>/posts/cairo-changelog-pov/</guid><description>What&amp;rsquo;s new in Cairo? There have been a lot of changes since the Cairo language has been released. This is a developer opinionated list of the major changes since the first release, 0.6.2 (Dec 2021).
StarkWareLtd last release CairoLang v0.10.3 (Dec 5, 2022) also named Cairo 1.0.
Useful links:
CairoLang releases v0.10 (Cairo 1.0) (breaking changes version) Aug. 29 2022 v0.10.0-pre Pre-release
Starknet has its core language modified, it&amp;rsquo;s now a Rusty lang, Starknet foresaw the future of Rust based smart-contract ecosystem (Luna developers and Solana)</description><content>&lt;h1 id="whats-new-in-cairo">What&amp;rsquo;s new in Cairo?&lt;/h1>
&lt;p>There have been a lot of changes since the Cairo language has been released. This is a developer opinionated list of the major changes since the first release, 0.6.2 (Dec 2021).&lt;/p>
&lt;p>StarkWareLtd last release CairoLang v0.10.3 (Dec 5, 2022) also named Cairo 1.0.&lt;/p>
&lt;p>Useful links:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/starkware-libs/cairo-lang/releases">CairoLang releases&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="v010-cairo-10">v0.10 (Cairo 1.0)&lt;/h1>
&lt;p>(breaking changes version)
&lt;strong>Aug. 29 2022&lt;/strong> v0.10.0-pre Pre-release&lt;/p>
&lt;p>Starknet has its core language modified, it&amp;rsquo;s now a Rusty lang, Starknet foresaw the future of Rust based smart-contract ecosystem (&lt;a href="https://news.coincu.com/90055-fall-of-terra/">Luna developers&lt;/a> and Solana)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>End statements with ;&lt;/p>
&lt;ul>
&lt;li>Note that new lines are still part of the language at this point, and you cannot put more than one instruction per line. This will change in Cairo1.0.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Use { â€¦ } for code blocks (instead of : and end)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add () around the condition of if statements&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Remove the member keyword in structs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Change comment to use // instead of #&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use &amp;hellip;, ap++ instead of &amp;hellip;; ap++ in low level Cairo code&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New transaction version&lt;/p>
&lt;ul>
&lt;li>Nonce are enforced as part of the transaction (bye bye UTXO model)&lt;/li>
&lt;li>Invoke execution object with &lt;a href="https://github.com/OpenZeppelin/cairo-contracts/blob/d12abf335f5c778fd19d6f99e91c099b40865deb/src/openzeppelin/account/presets/EthAccount.cairo#L81">&lt;strong>__validate__&lt;/strong>&lt;/a> and &lt;a href="https://github.com/OpenZeppelin/cairo-contracts/blob/d12abf335f5c778fd19d6f99e91c099b40865deb/src/openzeppelin/account/presets/EthAccount.cairo#L127">&lt;strong>__execute__&lt;/strong>&lt;/a> to differentiate between validation of the transaction (wether or not execution works (TODO: wild guess)) and execution that his pickup by another part of the process in the decentralized system(TODO: confirm)&lt;/li>
&lt;li>Declare function to send implementation code for registration&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Bridge Layer1 to Layer2&lt;/p>
&lt;ul>
&lt;li>New &lt;strong>fee&lt;/strong> field in &lt;a href="https://github.com/starkware-libs/cairo-lang/blob/54d7e92a703b3b5a1e07e9389608178129946efc/src/starkware/starknet/solidity/IStarknetMessagingEvents.sol#L9">LogMessageToL2 event&lt;/a> when executing L2 contract from L1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Tx simulation and fee estimation&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Support the EC-op builtin. to allows to verify ECDSA signatures&lt;/p>
&lt;/li>
&lt;li>
&lt;p>API: Remove entry_point_type field from transaction information&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="v09x">v0.9.x&lt;/h1>
&lt;p>Fees are now enforced on StarkNet, no more free candy!&lt;/p>
&lt;p>Contracts must be declared first and then instanciated through the new &lt;a href="https://starknet.io/docs/hello_starknet/deploying_from_contracts.html#the-deploy-system-call">deploy syscall&lt;/a> forcing 2 manual transactions for contracts deployed by EOA.&lt;/p>
&lt;h1 id="v081">v0.8.1&lt;/h1>
&lt;p>Fees are in now! What&amp;rsquo;s up with that &lt;a href="https://github.com/starkware-libs/cairo-lang/blob/4e233516f52477ad158bc81a86ec2760471c1b65/src/starkware/starknet/business_logic/transaction_fee.py">code&lt;/a> ? See more &lt;a href="https://starknet.io/documentation/fee-mechanism/#Introduction">here&lt;/a>.
&lt;img src="https://i.imgur.com/G2ZidCf.png" alt="">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>charge_fee &lt;img src="https://i.imgur.com/GnKEkFI.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>calculate_tx_fee_by_cairo_usage &lt;img src="https://i.imgur.com/wYIohf7.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/eth/StarknetMessaging.sol">L1 -&amp;gt; L2 message cancellation&lt;/a>
&lt;img src="https://i.imgur.com/P4UB8Wm.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>version&lt;/code> and &lt;code>max_fee&lt;/code> are part of the transaction structure now&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>__execute__&lt;/code> is now required mandatory entry point for account contract, see more &lt;a href="https://github.com/OpenZeppelin/cairo-contracts/blob/main/docs/Account.md#accounts">here&lt;/a>
&lt;img src="https://i.imgur.com/gIcuAdK.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added the cryptographic hash function &lt;a href="https://en.wikipedia.org/wiki/BLAKE_(hash_function)">blake2s&lt;/a> to the standard library&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="cairo">Cairo&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Meaningful error messaging(v0.7.0) including local variables and arguments
&lt;img src="https://i.imgur.com/AwjYaIV.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>High level memory allocation with the &lt;code>new&lt;/code> keyword in execution memory segment (whereas &lt;code>alloc&lt;/code> allocates a new memory segment)
&lt;img src="https://i.imgur.com/gFPTHzw.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Tuples and type aliases, will increase the pythonic vibes of Cairo even further
&lt;img src="https://i.imgur.com/Ya3bPcE.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fix for python 3.9&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="v07x">v0.7.x&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/starkware-libs/cairo-lang/blob/4e233516f52477ad158bc81a86ec2760471c1b65/src/starkware/starknet/services/api/messages.py#L80">Added a nonce for L1 to L2 message&lt;/a> this prevents sending the same message twice from the EVM world, e.g: calling a function.
&lt;img src="https://i.imgur.com/3SPa5Fz.png" alt="">&lt;/li>
&lt;/ul>
&lt;h1 id="addition-of-evm-compatibilities">Addition of EVM compatibilities&lt;/h1>
&lt;ul>
&lt;li>events are here !&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/rXdCLNc.png" alt="">
&lt;img src="https://i.imgur.com/uOzGLmA.png" alt="">&lt;/p>
&lt;p>(editor&amp;rsquo;s note: TheGraph but for StarkNet please.)&lt;/p>
&lt;ul>
&lt;li>delegate calls
prepend delegate_ to external contract function name or &lt;code>l1_handler&lt;/code>&lt;/li>
&lt;li>The &lt;code>__default__&lt;/code> entry point is introduced, it is similar to the Solidity fallback method as it is executed after missing on the function selector.&lt;/li>
&lt;li>The &lt;code>__l1_default__&lt;/code> entry point same as &lt;code>__default__&lt;/code> but for in-protocol message from the L1.&lt;/li>
&lt;/ul>
&lt;h2 id="new-syscalls">New syscalls&lt;/h2>
&lt;ul>
&lt;li>get_block_timestamp()
Returns a random number that sometimes appears to grow over time, currently around since 1970-01-01.
Notice of deprecation for get_tx_signature(), get_tx_info() is now preferred.&lt;/li>
&lt;/ul></content></item><item><title>In on Chain</title><link>/drafts/in-on-chain/</link><pubDate>Sun, 29 Jan 2023 02:30:51 +0100</pubDate><guid>/drafts/in-on-chain/</guid><description>In-chain refers to something that is stored and processed on the blockchain, while on-chain refers to something that is stored on the blockchain but processed off-chain. In the case of NFT artwork, in-chain would refer to the media being processed to its final form by the first execution layer, such as the EVM in Ethereum. On-chain would refer to the media being stored on the blockchain, but the processing and rendering of the artwork happens off-chain using JavaScript, for example, in real-time.</description><content>&lt;p>In-chain refers to something that is stored and processed on the blockchain, while on-chain refers to something that is stored on the blockchain but processed off-chain. In the case of NFT artwork, in-chain would refer to the media being processed to its final form by the first execution layer, such as the EVM in Ethereum. On-chain would refer to the media being stored on the blockchain, but the processing and rendering of the artwork happens off-chain using JavaScript, for example, in real-time.&lt;/p>
&lt;p>Some media formats, such as SVG, contain multiple data streams that may require different levels of processing, it can be rendered using rasterization techniques, but it can also be enhanced with CSS and/or JavaScript. This means that some parts of the image may be processed in-chain, while others may be processed off-chain.&lt;/p>
&lt;p>Additionally, depending on the context, the final form of the media may be different, it can be a raster image or a interactive vector image, so the processing can be different for each context and each final form. This can make it challenging to determine the appropriate level of in-chain and off-chain processing for certain types of media, and may require careful consideration of the specific requirements and constraints of the use case.&lt;/p>
&lt;p>Thus we can define in-chain NFT where the artwork does not require* turing complete processing post first on-chain execution (e.g: when tokenURI function return embbed audio/video in metadatas)
(as in mandatory). The processing capability being brought by the human user, and therefore, a NFT can be considered in-chain when it does not require post-chain processing, for example, in wallets, twitter profile pictures, and so on. On the other hand, NFTs that require Post-Chain Processing(PCP), for example, in browsers, desktop apps, or games, are considered on-chain NFTs.&lt;/p>
&lt;p>Example of possible artwork media types with possible Post-Chain Processing:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Media&lt;/th>
&lt;th>Audio&lt;/th>
&lt;th>Image&lt;/th>
&lt;th>PCP&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/Audio_Video_Interleave#">AVI&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/BMP_file_format">BMP&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/GIF#File_format">GIF&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/GlTF#GLB">GLB&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.khronos.org/assets/uploads/developers/library/overview/gltf-overview.pdf">GLTF&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/JPEG#Syntax_and_structure">JPG&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://https://en.wikipedia.org/wiki/MP4_file_format#Data_streams">MP4&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/WAV#">WAV&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/WebM#">WebM&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/Ogg#">OGG&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/Continuous_Media_Markup_Language">X&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/HTML#">HTML&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SVG">SVG&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SVG_animation">X&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Examples projects by media type:&lt;/p>
&lt;p>Add OpenSea Link&lt;/p>
&lt;p>In-chain BMP NFT is &lt;a href="https://etherscan.deth.net/address/0xd31fc221d2b0e0321c43e9f6824b26ebfff01d7d#code">Brotchain&lt;/a> NFT processing image
In-chain WAV NFT is the &lt;a href="https://etherscan.deth.net/address/0xE114DCe59A333f8D351371F54188F92C287b73E6#code">Bleeps&lt;/a> NFT&lt;/p>
&lt;p>(It&amp;rsquo;s worth noting that the table is not an exhaustive list of all media types that can be used for NFT artwork)&lt;/p>
&lt;p>The concept of in-chain and on-chain NFTs refers to the storage and processing of digital artwork on the blockchain by smart-contracts following NFT standards. In-chain NFTs are those where the artwork does not require Post-Chain Processing and can be viewed using standard software or hardware. On the other hand, on-chain NFTs require post-chain processing, such as in browsers or desktop apps. The broad spectrum of possibilities for In-chain NFTs allows for greater compatibility across devices and opens up unexplored possibilities for on-chain computation, such as the ability to create more interactive and dynamic artwork, or the ability to use smart contracts to create unique, one-of-a-kind pieces.&lt;/p>
&lt;p>INSERT DIAGRAM from DRAW.IO&lt;/p>
&lt;p>NB: We could use the &lt;a href="https://arxiv.org/pdf/2109.14534.pdf">StarkNet Cairo CPU&lt;/a> intercheangibly with the EVM as long as the smart-contract follows NFT standards.&lt;/p>
&lt;p>More ressources:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.simondlr.com/posts/flavours-of-on-chain-svg-nfts-on-ethereum">Simon de la Rouviere&amp;rsquo;s Flavours of on-chain SVG blog post&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Support cours Ethereum Virtual Machine</title><link>/posts/support-evm/</link><pubDate>Thu, 17 Mar 2022 21:50:00 +0100</pubDate><guid>/posts/support-evm/</guid><description>Ceci est un support de cours sur l&amp;rsquo;EVM (Ethereum Virtual Machine) pour le cours de l&amp;rsquo;Ecole SupÃ©rieure d&amp;rsquo;IngÃ©nieurs LÃ©onard de Vinci (ESILV).
Il comprend du matÃ©riel de cours, des illustrations et des liens vers des ressources.
La durÃ©e du cours est de 3h, sÃ©parÃ© en une lesson de 1h15 et des travaux dirigÃ©s de 1h15. La premiÃ¨re partie est une introduction Ã  la machine de Turing et sa correspondance aux processeurs de nos jours (rappel des connaissances), la seconde partie est une introduction Ã  l&amp;rsquo;EVM et sa correspondance avec la machine de Turing.</description><content>&lt;p>Ceci est un support de cours sur l&amp;rsquo;EVM (Ethereum Virtual Machine) pour le cours de l&amp;rsquo;Ecole SupÃ©rieure d&amp;rsquo;IngÃ©nieurs LÃ©onard de Vinci (ESILV).&lt;/p>
&lt;p>Il comprend du matÃ©riel de cours, des illustrations et des liens vers des ressources.&lt;/p>
&lt;p>La durÃ©e du cours est de 3h, sÃ©parÃ© en une lesson de 1h15 et des travaux dirigÃ©s de 1h15.
La premiÃ¨re partie est une introduction Ã  la machine de Turing et sa correspondance aux processeurs de nos jours (rappel des connaissances),
la seconde partie est une introduction Ã  l&amp;rsquo;EVM et sa correspondance avec la machine de Turing.&lt;/p>
&lt;p>Les travaux pratiques consistent Ã  observer le fonctionnement de l&amp;rsquo;EVM ainsi que la lecture des &lt;a href="https://www.evm.codes/">opcodes&lt;/a> au travers du debugger &lt;a href="https://remix.ethereum.org/">Remix&lt;/a> et Ã  implÃ©menter des opcodes directement dans un second temps.&lt;/p>
&lt;p>NB: Tenderly peut-Ãªtre utilisÃ© pour une meilleure observervation du fonctionnement de l&amp;rsquo;EVM sur la blockchain Ethereum mais un peu plus long Ã  mettre en place.&lt;/p>
&lt;h1 id="machine-de-turing">Machine de Turing&lt;/h1>
&lt;p>Machine de Turing
&lt;img src="/img/posts/support-evm/mThs6b2.jpg" alt="">
&lt;a href="https://www.youtube.com/watch?v=L5O04P2ASRc&amp;amp;t=647s">https://www.youtube.com/watch?v=L5O04P2ASRc&amp;amp;t=647s&lt;/a>&lt;/p>
&lt;h1 id="ethereum-virtual-machine-evm">Ethereum Virtual Machine (EVM)&lt;/h1>
&lt;p>&lt;img src="/img/posts/support-evm/ysIsVUG.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="/img/posts/support-evm/Xba9Jwb.png" alt="">&lt;/p>
&lt;hr>
&lt;p>Lexiques
&lt;a href="https://github.com/asseth/yellowpaper/blob/7dd3ed26b6fe4b7a1b0394194ef268d01f9955b4/Paper.pdf">https://github.com/asseth/yellowpaper/blob/7dd3ed26b6fe4b7a1b0394194ef268d01f9955b4/Paper.pdf&lt;/a> Page 17&lt;/p>
&lt;hr>
&lt;p>&lt;img src="/img/posts/support-evm/Lo0fP89.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="/img/posts/support-evm/8cOg89m.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="/img/posts/support-evm/vRJgorg.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="/img/posts/support-evm/tMgjFeK.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="/img/posts/support-evm/cnV0k5f.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="/img/posts/support-evm/0J3imfd.png" alt="">&lt;/p>
&lt;hr>
&lt;p>Dive in &lt;a href="http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf">http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf&lt;/a>&lt;/p>
&lt;h2 id="illustration">Illustration&lt;/h2>
&lt;ul>
&lt;li>Illustration Turing machine =&amp;gt; &lt;a href="https://medium.com/creative-automata/classic-turing-machine-with-tape-erasure-e14870ad154e">https://medium.com/creative-automata/classic-turing-machine-with-tape-erasure-e14870ad154e&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf">http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="bibliography">Bibliography&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>ðŸ‡«ðŸ‡· &lt;a href="https://github.com/asseth/yellowpaper/blob/7dd3ed26b6fe4b7a1b0394194ef268d01f9955b4/Paper.pdf">EIP-150 Yellowpaper&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ðŸ‡¬ðŸ‡§ &lt;a href="https://ethereum.github.io/yellowpaper/paper.pdf">Updated Yellowpaper&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/benjaminion/YellowPaper_CheatSheet">Yellowpaper Cheat Sheet&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf">Ethereum EVM Illustrated&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Execution model Page 56&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="implementation">Implementation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ethereum/go-ethereum/blob/master/core/vm/interpreter.go#L138">Implementation allocation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="travaux-dirigÃ©s">Travaux dirigÃ©s&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://remix.ethereum.org/">Remix&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.evm.codes/">EVM opcodes&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Solidity sources to analyze:&lt;/p>
&lt;ul>
&lt;li>Goal, observe the behavior of the EVM between the differents implementation functions of the same algorithm:
&lt;ul>
&lt;li>Sum of an array of uint.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-solidity" data-lang="solidity">&lt;span style="color:#75715e">// SPDX-License-Identifier: GPL-3.0
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">pragma solidity&lt;/span> &lt;span style="color:#f92672">&amp;gt;=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">4&lt;/span>.&lt;span style="color:#ae81ff">16&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">9&lt;/span>.&lt;span style="color:#ae81ff">0&lt;/span>;
&lt;span style="color:#66d9ef">library&lt;/span> VectorSum {
&lt;span style="color:#75715e">// This function is less efficient because the optimizer currently fails to
&lt;/span>&lt;span style="color:#75715e">// remove the bounds checks in array access.
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">sumSolidity&lt;/span>(&lt;span style="color:#66d9ef">uint&lt;/span>[] &lt;span style="color:#66d9ef">memory&lt;/span> data) &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">pure&lt;/span> &lt;span style="color:#66d9ef">returns&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> sum) {
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> data.length; &lt;span style="color:#f92672">++&lt;/span>i)
sum &lt;span style="color:#f92672">+=&lt;/span> data[i];
}
&lt;span style="color:#75715e">// We know that we only access the array in bounds, so we can avoid the check.
&lt;/span>&lt;span style="color:#75715e">// 0x20 needs to be added to an array because the first slot contains the
&lt;/span>&lt;span style="color:#75715e">// array length.
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">sumAsm&lt;/span>(&lt;span style="color:#66d9ef">uint&lt;/span>[] &lt;span style="color:#66d9ef">memory&lt;/span> data) &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">pure&lt;/span> &lt;span style="color:#66d9ef">returns&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> sum) {
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> data.length; &lt;span style="color:#f92672">++&lt;/span>i) {
&lt;span style="color:#66d9ef">assembly&lt;/span> {
sum &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(sum, &lt;span style="color:#a6e22e">mload&lt;/span>(&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#a6e22e">add&lt;/span>(data, &lt;span style="color:#ae81ff">0x20&lt;/span>), &lt;span style="color:#a6e22e">mul&lt;/span>(i, &lt;span style="color:#ae81ff">0x20&lt;/span>))))
}
}
}
&lt;span style="color:#75715e">// Same as above, but accomplish the entire code within inline assembly.
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">sumPureAsm&lt;/span>(&lt;span style="color:#66d9ef">uint&lt;/span>[] &lt;span style="color:#66d9ef">memory&lt;/span> data) &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">pure&lt;/span> &lt;span style="color:#66d9ef">returns&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> sum) {
&lt;span style="color:#66d9ef">assembly&lt;/span> {
&lt;span style="color:#75715e">// Load the length (first 32 bytes)
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">let&lt;/span> len &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">mload&lt;/span>(data)
&lt;span style="color:#75715e">// Skip over the length field.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Keep temporary variable so it can be incremented in place.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// NOTE: incrementing data would result in an unusable
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// data variable after this assembly block
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">let&lt;/span> dataElementLocation &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(data, &lt;span style="color:#ae81ff">0x20&lt;/span>)
&lt;span style="color:#75715e">// Iterate until the bound is not met.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">for&lt;/span>
{ &lt;span style="color:#f92672">let&lt;/span> end &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(dataElementLocation, &lt;span style="color:#a6e22e">mul&lt;/span>(len, &lt;span style="color:#ae81ff">0x20&lt;/span>)) }
&lt;span style="color:#a6e22e">lt&lt;/span>(dataElementLocation, end)
{ data &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(dataElementLocation, &lt;span style="color:#ae81ff">0x20&lt;/span>) }
{
sum &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(sum, &lt;span style="color:#a6e22e">mload&lt;/span>(dataElementLocation))
}
}
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="contact">Contact&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://twitter.com/magicking_">@magicking_&lt;/a>&lt;/li>
&lt;li>&lt;a href="mailto:s@6120.eu">s@6120.eu&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://6120.eu">https://6120.eu&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Altfury a remote wallet provider (GSaaS*) design document - Work In Progress</title><link>/posts/altfury/</link><pubDate>Sat, 13 Feb 2021 19:00:03 +0100</pubDate><guid>/posts/altfury/</guid><description>Motivationale With around 2000 DApps and more than 60.000 users, the promise of 27.000 tx/s with Ethereum 2.0 and people arguing for Infura centralizing the public Ethereum world there is call for alternative! Altfury aims to provide to anyone the ability to interact with DApps and any smart contract without the need of paying gas.
Your user don&amp;rsquo;t have a wallet?
You can let us take care of your keys and the burden to not forget and secure them while enjoying the DeFi space faster than ever.</description><content>&lt;h2 id="motivationale">Motivationale&lt;/h2>
&lt;p>With around &lt;a href="https://dappradar.com/rankings/protocol/ethereum/87">2000 DApps&lt;/a> and more than &lt;a href="https://dappradar.com/rankings/protocol/ethereum">60.000 users&lt;/a>, the promise of 27.000 tx/s with Ethereum 2.0 and people arguing for Infura centralizing the public Ethereum world there is call for alternative!
Altfury aims to provide to anyone the ability to interact with DApps and any smart contract without the need of paying gas.&lt;/p>
&lt;p>Your user don&amp;rsquo;t have a wallet?&lt;/p>
&lt;p>You can let us take care of your keys and the burden to not forget and secure them while enjoying the DeFi space faster than ever.
DApp developers, the Ethereum world to your users with only the change of your endpoint URL address.
Users, hassle free access to the DeFi world&lt;/p>
&lt;p>No burden to use a new SDK in your DApps, work with standard Wallet Connect (Uniswap &amp;amp; al)!
Peepz, just to go the website (optional install browser extension) pair up and go!&lt;/p>
&lt;p>*Gas Station As A Service (GSAAS)&lt;/p>
&lt;h1 id="intro">Intro&lt;/h1>
&lt;p>The goal of this document is to provide a design of a high-available service providing Ethereum JSON RPC endpoints over HTTP and HTTP WebSocket and other related services such as fee (tx) management to act as a drop-in repleacement (or plugin to existing wallet connectors).&lt;/p>
&lt;h3 id="technical-note">Technical note&lt;/h3>
&lt;p>In addition, the endpoint SHOULD allow:&lt;/p>
&lt;ul>
&lt;li>For unfunded Ethereum account to pass transaction on the blockchain under certain condition
Withhold transaction then&lt;/li>
&lt;li>Guaranteed transaction inclusion with low gas price fee
For this specific feature, there is multiple ways to achieve this
Pass transaction off-band to a partner miner pool that would accept transaction with a &lt;strong>gasPrice&lt;/strong> set at &lt;strong>0&lt;/strong> &lt;em>or&lt;/em> fund the account via a faucet to the &lt;strong>gasLimit&lt;/strong> x &lt;strong>gasPrice&lt;/strong> while withholding
the transaction until funding is done and then propagate it.&lt;/li>
&lt;/ul>
&lt;h2 id="definition">Definition&lt;/h2>
&lt;p>A remote wallet provider is a service that aims to help distant services to execute(read calls), sign(key control) and transmit transaction(write calls)&lt;/p>
&lt;p>It integrate seamlessly by emulating a blockchain state with a balance corresponding for the credit of each account creating an ephemeral blockchain network (next_view(state, account_balances)-&amp;gt;fork_view, a fork of the mainnet displaying accounts as if they have the corresponding amount making the experience seamless as&lt;/p>
&lt;h2 id="customers">Customers&lt;/h2>
&lt;ul>
&lt;li>Bots&lt;/li>
&lt;li>NoCode users&lt;/li>
&lt;li>User that click on interface (browser extension, &lt;a href="https://twitter.com/P3b7_/status/1361345964259352580?s=19">https://twitter.com/P3b7_/status/1361345964259352580?s=19&lt;/a>)&lt;/li>
&lt;li>User willing to invest to rely on this for automation&lt;/li>
&lt;li>User that do their on smart contract automation&lt;/li>
&lt;/ul>
&lt;p>Todo do market research to describe personas&lt;/p>
&lt;h2 id="future-of-work">Future of work&lt;/h2>
&lt;ul>
&lt;li>Provide services about key usage (defi liquidity mining, &amp;hellip;)&lt;/li>
&lt;/ul>
&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>SHOULD be as minimal as possible to have a low footprint/cost
(front-end requests (administration, user management, &amp;hellip;)).
Use go-ethereum as library to avoid technical debt as much as possible.&lt;/p>
&lt;p>-&amp;gt; Wondering if serverless could be a benefit if it were handling execution read calls, this might be costly if not self-hosted&lt;/p>
&lt;p>-&amp;gt; Browser extention to change the RPC endpoint easily
-&amp;gt; Ledger device with dedicated credit app
-&amp;gt; Website where account can be toped-up by XXX means&lt;/p>
&lt;h1 id="security">Security&lt;/h1>
&lt;p>Per ethereum account (extracted from transaction signature) whitelisting.
Per application(what), per logged user (who)
Anonymous user SHOULD be limited by IP(Handle IPv6 per /64 block?):&lt;/p>
&lt;ul>
&lt;li>Rate in second&lt;/li>
&lt;li>Total number of concurrent connection&lt;/li>
&lt;li>Time limit on connection&lt;/li>
&lt;/ul>
&lt;p>USER_TYPE:&lt;/p>
&lt;ul>
&lt;li>LOW_GASER&lt;/li>
&lt;li>TO_FUND_ACCOUNT&lt;/li>
&lt;li>ANONYMOUS&lt;/li>
&lt;/ul>
&lt;h1 id="new-usages-possible-out-of-that">New usages possible out of that&lt;/h1>
&lt;ul>
&lt;li>Send NFT anonymously via TornadoCash integration&lt;/li>
&lt;/ul>
&lt;h2 id="allowed-usage-pattern">Allowed usage pattern&lt;/h2>
&lt;ul>
&lt;li>Authorize (max amount?)&lt;/li>
&lt;li>Trade&lt;/li>
&lt;li>Trade&lt;/li>
&lt;li>&amp;hellip; max amount before security callbacks?&lt;/li>
&lt;/ul>
&lt;h2 id="regulatory-limits">Regulatory limits&lt;/h2>
&lt;p>Is this such a thing for DeFi?
Tax?&lt;/p>
&lt;h2 id="fraud-prevention--whitelisting-system">Fraud prevention / whitelisting system&lt;/h2>
&lt;p>Smart-contract based?&lt;/p>
&lt;h3 id="providing-an-ephemeral-ethereum-state">Providing an ephemeral ethereum state&lt;/h3>
&lt;ul>
&lt;li>Modify &lt;a href="https://github.com/ledgerwatch/turbo-geth/blob/master/consensus/ethash/sealer.go#L166">https://github.com/ledgerwatch/turbo-geth/blob/master/consensus/ethash/sealer.go#L166&lt;/a> to wait on a channel instead of searching for the nonce and set a MAGIC MixDigest to permit identification of a special block to be included on the canonical chain without verification&lt;/li>
&lt;li>Prevent MAGIC block propagation throught&lt;/li>
&lt;/ul>
&lt;h1 id="transaction-payment-to-miner">Transaction payment to miner&lt;/h1>
&lt;p>The payment is distributed to the block.coinbase each block containing private transaction (and potentially a lower than usual gas price)&lt;/p>
&lt;p>Todo expand idea of private transaction via on-chain payment -&amp;gt; find a settlement cost minimal (ticket+payment channel)&lt;/p>
&lt;h3 id="transaction-flow">Transaction flow&lt;/h3>
&lt;h4 id="write-flows">Write flows&lt;/h4>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">sequenceDiagram
participant User
participant EVM Service
participant Eth node
activate EVM Service
User-&amp;gt;&amp;gt;EVM Service: eth_sendRawTransaction
EVM Service-&amp;gt;&amp;gt;EVM Service: Classify user type
EVM Service-&amp;gt;EVM Service: Apply rate limit
opt if user is TO_FUND_ACCOUNT type
EVM Service-&amp;gt;EVM Service: Apply funding TX to txpool
end
opt if user is LOW_GASER
EVM Service-&amp;gt;EVM Service: Disable gasPrice limit
end
EVM Service-&amp;gt;EVM Service: Verify TX against txpool
activate Eth node
EVM Service--&amp;gt;&amp;gt;Eth node: Propagate funding transaction for TO_FUND_ACCOUNT user
EVM Service--&amp;gt;&amp;gt;EVM Service: Wait for funding settlement for TO_FUND_ACCOUNT user
alt Private or public transaction
EVM Service-&amp;gt;&amp;gt;Eth node: Propagate user transaction
deactivate Eth node
else
EVM Service--&amp;gt;&amp;gt;Miner pool: Dispatch transaction for LOW_GASER user
end
deactivate EVM Service
&lt;/code>&lt;/pre>&lt;h4 id="read-flows">Read flows&lt;/h4>
&lt;p>Todo&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>&lt;a href="https://docs.google.com/spreadsheets/d/1iOHnC1MkwcXxN-Gisk9nWeWIRfR6ZaWAXLtYL37NCzE/edit?pli=1#gid=0">Pricing&lt;/a>
&lt;a href="https://github.com/ethereum/wiki/wiki/JSON-RPC">https://github.com/ethereum/wiki/wiki/JSON-RPC&lt;/a>
&lt;a href="https://www.stateofthedapps.com/stats">https://www.stateofthedapps.com/stats&lt;/a>&lt;/p>
&lt;h2 id="ethereum-rpc">Ethereum RPC&lt;/h2>
&lt;h3 id="modified-rpc">Modified RPC&lt;/h3>
&lt;p>&lt;strong>eth_call&lt;/strong> due to &lt;code>gasPrice&lt;/code> parameter
&lt;strong>eth_estimateGas&lt;/strong> due to &lt;code>gasPrice&lt;/code> parameter&lt;/p>
&lt;h4 id="eth_gasprice">eth_gasPrice&lt;/h4>
&lt;p>Should reflect the gasPrice we want either low or high depending of the kind of transaction we expect to see either through a miner pool or pre-funding.&lt;/p>
&lt;h4 id="eth_sendrawtransaction">eth_sendRawTransaction&lt;/h4>
&lt;p>Custom implementation of this RPC, depending on USER_TYPE&lt;/p>
&lt;h3 id="non-stream-rpc">Non stream RPC&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>eth_accounts&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_blockNumber&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_call&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_chainId&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBalance&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBlockByHash&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBlockByNumber&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBlockTransactionCountByHash&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBlockTransactionCountByNumber&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getCode&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getLogs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getStorageAt&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionByBlockHashAndIndex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionByBlockNumberAndIndex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionByHash&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionCount&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionReceipt&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getUncleByBlockHashAndIndex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getUncleByBlockNumberAndIndex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getUncleCountByBlockHash&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getUncleCountByBlockNumber&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getWork&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_hashrate&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_mining&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_protocolVersion&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_submitWork&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_syncing&lt;/p>
&lt;/li>
&lt;li>
&lt;p>net_listening&lt;/p>
&lt;/li>
&lt;li>
&lt;p>net_peerCount&lt;/p>
&lt;/li>
&lt;li>
&lt;p>net_version&lt;/p>
&lt;/li>
&lt;li>
&lt;p>web3_clientVersion&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="streams-rpc">Streams RPC&lt;/h3>
&lt;ul>
&lt;li>eth_newFilter&lt;/li>
&lt;li>eth_newPendingTransactionFilter&lt;/li>
&lt;li>eth_getFilterChanges&lt;/li>
&lt;li>eth_getFilterLogs&lt;/li>
&lt;li>eth_uninstallFilter&lt;/li>
&lt;li>eth_subscribe&lt;/li>
&lt;li>eth_unsubscribe&lt;/li>
&lt;/ul>
&lt;h2 id="notes">Notes&lt;/h2>
&lt;ul>
&lt;li>Fast Transaction Pool, low latency viewer / transaction sender&lt;/li>
&lt;li>Connect to peers, fetch memory pool, behave as light relay node&lt;/li>
&lt;li>Provide transaction mempool view and fast transaction dispatching&lt;/li>
&lt;li>Populate a central database for constant time access via API (paid access ?)&lt;/li>
&lt;li>Monitor transaction to addresses, on update&lt;/li>
&lt;li>Callback to backend customers through a fast protocol (GRPC?REST?&amp;hellip;?)&lt;/li>
&lt;li>Trigger registered function (e.g: send transaction)&lt;/li>
&lt;li>World infrastructure required (node in each world, potentially costly + dev ops)&lt;/li>
&lt;li>Dashboard with world view of ethereum compatible blockchain&lt;/li>
&lt;li>Speed transaction sending for quick transaction dispatching&lt;/li>
&lt;li>Would require ethereum node modification&lt;/li>
&lt;/ul></content></item><item><title>Update from last blog</title><link>/posts/wip/</link><pubDate>Fri, 03 Aug 2001 00:00:00 +0000</pubDate><guid>/posts/wip/</guid><description>Work in progressâ„¢ Work in progressâ„¢ since 2001.</description><content>&lt;h1 id="work-in-progress">Work in progressâ„¢&lt;/h1>
&lt;p>Work in progressâ„¢ since &lt;a href="https://web.archive.org/web/20011203211125/http://progcity.free.fr/">2001&lt;/a>.&lt;/p></content></item></channel></rss>