<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>6120's Notes</title><link>https://6120.eu/</link><description>Recent content on 6120's Notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright/><lastBuildDate>Tue, 22 Jul 2025 01:01:50 +0100</lastBuildDate><atom:link href="https://6120.eu/index.xml" rel="self" type="application/rss+xml"/><item><title>Hydra Workshop Plan</title><link>https://6120.eu/posts/workshop-hydra/</link><pubDate>Tue, 22 Jul 2025 01:01:50 +0100</pubDate><guid>https://6120.eu/posts/workshop-hydra/</guid><description>Hydra Visual Coding Workshop Duration: 2 hours + 1 hour bonus
Format: 5 lessons (30min each) with 10min teaching + 15-20min workshop Cheat Sheet: Companion PDF (Source) Workshop Philosophy: Experimentation over perfection Happy accidents are learning opportunities Community and sharing enhances creativity Start simple, build complexity gradually Lesson 1: Hydra 101 (10min + 20min) Teaching (10min) Objective: Get familiar with Hydra interface and basic workflow Navigate to https://hydra.</description><content>&lt;h1 id="hydra-visual-coding-workshop">Hydra Visual Coding Workshop&lt;/h1>
&lt;h2 id="cheat-sheet-companion-pdfhttps6120euimgworkshop-hydraworkshop-cheatsheetpdf-sourcehttpsgithubcommagicking6120eublobmainstaticimgworkshop-hydraworkshop-cheatsheettex">&lt;strong>Duration:&lt;/strong> 2 hours + 1 hour bonus&lt;br>
&lt;strong>Format:&lt;/strong> 5 lessons (30min each) with 10min teaching + 15-20min workshop
&lt;strong>Cheat Sheet&lt;/strong>: &lt;a href="https://6120.eu/img/workshop-hydra/workshop-cheatsheet.pdf">Companion PDF&lt;/a> (&lt;a href="https://github.com/Magicking/6120.eu/blob/main/static/img/workshop-hydra/workshop-cheatsheet.tex">Source&lt;/a>)&lt;/h2>
&lt;h2 id="workshop-philosophy">Workshop Philosophy:&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Experimentation over perfection&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Happy accidents are learning opportunities&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Community and sharing enhances creativity&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Start simple, build complexity gradually&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="lesson-1-hydra-101-10min--20min">Lesson 1: Hydra 101 (10min + 20min)&lt;/h2>
&lt;h3 id="teaching-10min">Teaching (10min)&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Objective:&lt;/strong> Get familiar with Hydra interface and basic workflow&lt;/li>
&lt;li>Navigate to &lt;a href="https://hydra.ojack.xyz">https://hydra.ojack.xyz&lt;/a>&lt;/li>
&lt;li>&lt;strong>Interface tour (2min):&lt;/strong>
&lt;ul>
&lt;li>Play/Stop button&lt;/li>
&lt;li>Clear button&lt;/li>
&lt;li>Examples dropdown&lt;/li>
&lt;li>Settings gear&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Documentation overview:&lt;/strong> Quick look at built-in help&lt;/li>
&lt;li>&lt;strong>Basic workflow demonstration:&lt;/strong>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">40&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">1.2&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Show simple texture → output chain&lt;/li>
&lt;/ul>
&lt;h3 id="workshop-1-20min">Workshop 1 (20min)&lt;/h3>
&lt;p>&lt;strong>Goal:&lt;/strong> Get your first visual output working&lt;/p>
&lt;ul>
&lt;li>Navigate to &lt;a href="https://hydra.ojack.xyz">https://hydra.ojack.xyz&lt;/a>&lt;/li>
&lt;li>Try these basic generators:
&lt;ul>
&lt;li>&lt;code>osc().out()&lt;/code>&lt;/li>
&lt;li>&lt;code>noise().out()&lt;/code>&lt;/li>
&lt;li>&lt;code>solid(1,0,0).out()&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Experiment with changing numbers&lt;/li>
&lt;li>Bookmark useful resources page (see cheatsheet)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="lesson-2-experimenting-with-hydra-10min--20min">Lesson 2: Experimenting with Hydra (10min + 20min)&lt;/h2>
&lt;h3 id="teaching-10min-1">Teaching (10min)&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Core principle:&lt;/strong> &amp;ldquo;You always get a result, no matter what numbers you use&amp;rdquo;&lt;/li>
&lt;li>&lt;strong>Dynamism:&lt;/strong> Array and arrow function add fun&lt;/li>
&lt;li>&lt;strong>Math.PI exploration:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>osc(40, 0.1, Math.PI).out()&lt;/code>&lt;/li>
&lt;li>Show how Math.PI affects colors and scaling&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Number ranges:&lt;/strong> Demonstrate different parameter ranges&lt;/li>
&lt;li>&lt;strong>Happy accidents:&lt;/strong> Show how random experimentation leads to discoveries&lt;/li>
&lt;/ul>
&lt;h3 id="workshop-2-20min">Workshop 2 (20min)&lt;/h3>
&lt;p>&lt;strong>Goal:&lt;/strong> Understand parameter experimentation&lt;/p>
&lt;ul>
&lt;li>Navigate to &lt;a href="https://hydra.ojack.xyz/functions">https://hydra.ojack.xyz/functions&lt;/a>&lt;/li>
&lt;li>Use this as reference while experimenting&lt;/li>
&lt;li>Try:
&lt;ul>
&lt;li>Different frequency values: &lt;code>osc(10).out()&lt;/code> vs &lt;code>osc(100).out()&lt;/code>&lt;/li>
&lt;li>Color experiments with Math.PI&lt;/li>
&lt;li>Scaling with various numbers&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="lesson-3-mastering-the-chain--10min--20min">Lesson 3: Mastering the Chain &amp;ldquo;.&amp;rdquo; (10min + 20min)&lt;/h2>
&lt;h3 id="teaching-10min-2">Teaching (10min)&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>The power of chaining:&lt;/strong> Everything connects with &amp;ldquo;.&amp;rdquo;&lt;/li>
&lt;li>&lt;strong>Write slowly and deliberately&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Basic chain structure:&lt;/strong> &lt;em>source().transform().output()&lt;/em>&lt;/li>
&lt;li>&lt;strong>Example progression:&lt;/strong>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>() &lt;span style="color:#75715e">// just a source
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">osc&lt;/span>().&lt;span style="color:#a6e22e">rotate&lt;/span>() &lt;span style="color:#75715e">// add transformation
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">osc&lt;/span>().&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#ae81ff">0.1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>() &lt;span style="color:#75715e">// complete chain
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Keep function reference page open&lt;/li>
&lt;/ul>
&lt;h3 id="workshop-3-20min">Workshop 3 (20min)&lt;/h3>
&lt;p>&lt;strong>Goal:&lt;/strong> Practice chaining functions confidently&lt;/p>
&lt;ul>
&lt;li>Navigate to blank canvas &lt;a href="https://hydra.ojack.xyz">https://hydra.ojack.xyz&lt;/a>&lt;/li>
&lt;li>Build chains step by step:
&lt;ul>
&lt;li>Start simple: &lt;code>noise().out()&lt;/code>&lt;/li>
&lt;li>Add transforms: &lt;code>noise().color(1,0,0).out()&lt;/code>&lt;/li>
&lt;li>Try combinations: &lt;code>osc().rotate().scale().out()&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Keep it simple, focus on the flow&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="lesson-4-hyper-hydra-modules-10min--20min">Lesson 4: Hyper-Hydra Modules (10min + 20min)&lt;/h2>
&lt;h3 id="teaching-10min-3">Teaching (10min)&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Introduction to external modules&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Modules icon:&lt;/strong> Show how to add modules easily&lt;/li>
&lt;li>&lt;strong>Hyper-Hydra:&lt;/strong> A collection of advanced modules&lt;/li>
&lt;li>&lt;strong>ShaderPark (glsl) integration demo:&lt;/strong>
&lt;ul>
&lt;li>Navigate to: &lt;a href="https://hydra.ojack.xyz/?code=Y29uc3QlMjAlN0IlMjBzY3VscHRUb0h5ZHJhUmVuZGVyZXIlMjAlN0QlMjAlM0QlMjBhd2FpdCUyMGltcG9ydCglMjJodHRwcyUzQSUyRiUyRnVucGtnLmNvbSUyRnNoYWRlci1wYXJrLWNvcmUlMkZkaXN0JTJGc2hhZGVyLXBhcmstY29yZS5lc20uanMlMjIp">ShaderPark Example&lt;/a>&lt;/li>
&lt;li>Show 3D sculptural possibilities&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Extensibility of Hydra&lt;/strong>&lt;/li>
&lt;li>&lt;strong>JavaScript tricks:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript"> &lt;span style="color:#a6e22e">c&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>;&lt;span style="color:#a6e22e">f&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Array(&lt;span style="color:#ae81ff">3&lt;/span>).&lt;span style="color:#a6e22e">fill&lt;/span>().&lt;span style="color:#a6e22e">reduce&lt;/span>(
(&lt;span style="color:#a6e22e">acc&lt;/span>, &lt;span style="color:#a6e22e">e&lt;/span>) =&amp;gt;
&lt;span style="color:#a6e22e">acc&lt;/span>.&lt;span style="color:#a6e22e">add&lt;/span>(
&lt;span style="color:#a6e22e">shape&lt;/span>(&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">0.1&lt;/span>)
.&lt;span style="color:#a6e22e">scroll&lt;/span>((&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">0.1&lt;/span>)
),
&lt;span style="color:#a6e22e">solid&lt;/span>()
)
&lt;span style="color:#a6e22e">f&lt;/span>.&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="workshop-4-20min">Workshop 4 (20min)&lt;/h3>
&lt;p>&lt;strong>Goal:&lt;/strong> Explore advanced modules and understand performance&lt;/p>
&lt;ul>
&lt;li>Reference: &lt;a href="https://github.com/geikha/hyper-hydra">Hyper-Hydra GitHub&lt;/a>&lt;/li>
&lt;li>Try the ShaderPark example&lt;/li>
&lt;li>Experiment with:
&lt;ul>
&lt;li>Image loading functions&lt;/li>
&lt;li>Canvas size modifications&lt;/li>
&lt;li>CPU-intensive operations&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Notice performance differences and how it affects visuals&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="lesson-5-hydra-midi-integration-10min--20min">Lesson 5: Hydra-MIDI Integration (10min + 20min)&lt;/h2>
&lt;h3 id="teaching-10min-4">Teaching (10min)&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Real-time control with MIDI&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Music visualization possibilities&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Demo setup:&lt;/strong>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">loadScript&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;https://h.6120.eu/midi.js&amp;#34;&lt;/span>)
&lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">midi&lt;/span>.&lt;span style="color:#a6e22e">start&lt;/span>({ &lt;span style="color:#a6e22e">channel&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;*&amp;#39;&lt;/span>, &lt;span style="color:#a6e22e">input&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;*&amp;#39;&lt;/span> })
&lt;span style="color:#a6e22e">midi&lt;/span>.&lt;span style="color:#a6e22e">show&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Show how MIDI values can control visual parameters&lt;/li>
&lt;/ul>
&lt;h3 id="workshop-5-20min">Workshop 5 (20min)&lt;/h3>
&lt;p>&lt;strong>Goal:&lt;/strong> Connect MIDI to visuals&lt;/p>
&lt;ul>
&lt;li>Navigate to: &lt;a href="https://hydra.ojack.xyz/?code=YXdhaXQlMjBsb2FkU2NyaXB0KCUyMmh0dHBzJTNBJTJGJTJGNjEyMC5ldSUyRnB1YmxpYyUyRm1pZGkuanMlMjIp">MIDI Example&lt;/a>&lt;/li>
&lt;li>Set up MIDI connection (virtual MIDI if no hardware)&lt;/li>
&lt;li>Try: &lt;code>solid(note('*'), 0, 1).out()&lt;/code>&lt;/li>
&lt;li>Link different MIDI controls to visual parameters&lt;/li>
&lt;li>Create responsive audio-visual performances&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="bonus-content-1-hour">BONUS CONTENT (1 hour)&lt;/h1>
&lt;h2 id="lesson-6-collaborative-coding-with-flok-10min--20min">Lesson 6: Collaborative Coding with Flok (10min + 20min)&lt;/h2>
&lt;h3 id="teaching-10min-5">Teaching (10min)&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Collaborative live coding concept&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Flok platform introduction&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Sharing sessions and real-time collaboration&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Community aspect of live coding&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3 id="workshop-6-20min">Workshop 6 (20min)&lt;/h3>
&lt;p>&lt;strong>Goal:&lt;/strong> Experience collaborative visual coding&lt;/p>
&lt;ul>
&lt;li>Set up shared Flok session&lt;/li>
&lt;li>Practice collaborative etiquette&lt;/li>
&lt;li>Create group visual performances&lt;/li>
&lt;li>Share and iterate on each other&amp;rsquo;s code&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="key-resources-to-keep-handy">Key Resources to Keep Handy:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hydra.ojack.xyz/functions">Hydra Functions Reference&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/geikha/hyper-hydra">Hyper-Hydra Extensions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hydra.ojack.xyz">Main Hydra Site&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="hydra-cheat-sheet">Hydra Cheat Sheet&lt;/h1>
&lt;h2 id="sources">Sources&lt;/h2>
&lt;h3 id="oscfrequency-sync-offset">osc(frequency, sync, offset)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Generates an oscillating wave pattern.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="noisescale-offset">noise(scale, offset)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Creates a noise texture.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="voronoiscale-speed-blending">voronoi(scale, speed, blending)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Generates a Voronoi pattern.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">voronoi&lt;/span>(&lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#ae81ff">0.3&lt;/span>, &lt;span style="color:#ae81ff">0.3&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="shapesides-radius-smoothing">shape(sides, radius, smoothing)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Renders a geometric shape.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">shape&lt;/span>(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">0.3&lt;/span>, &lt;span style="color:#ae81ff">0.01&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="gradientspeed">gradient(speed)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Creates a gradient pattern.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">gradient&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="solidr-g-b-a">solid(r, g, b, a)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Generates a solid color.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">solid&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="modulation">Modulation&lt;/h2>
&lt;h3 id="modulateamount">modulate(amount)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Modulates the source using another texture.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">modulate&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">0.1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="modulatescalemultiple-offset">modulateScale(multiple, offset)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Modulates the scale of the source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">modulateScale&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="modulaterotatemultiple-offset">modulateRotate(multiple, offset)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Modulates the rotation of the source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">modulateRotate&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="modulatepixelatemultiple-offset">modulatePixelate(multiple, offset)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Modulates the pixelation of the source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">modulatePixelate&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="modulaterepeatrepeatx-repeaty-offsetx-offsety">modulateRepeat(repeatX, repeatY, offsetX, offsetY)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Modulates the repetition of the source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">modulateRepeat&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">0.5&lt;/span>, &lt;span style="color:#ae81ff">0.5&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="modulatescrollxscrollx-speed">modulateScrollX(scrollX, speed)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Modulates horizontal scrolling.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">modulateScrollX&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">0.5&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="modulatescrollyscrolly-speed">modulateScrollY(scrollY, speed)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Modulates vertical scrolling.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">modulateScrollY&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">0.5&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="modulatehueamount">modulateHue(amount)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Modulates the hue of the source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">modulateHue&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="color">Color&lt;/h2>
&lt;h3 id="colorr-g-b-a">color(r, g, b, a)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Applies color to the source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">color&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="coloramaamount">colorama(amount)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Applies a colorama effect.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">colorama&lt;/span>(&lt;span style="color:#ae81ff">0.005&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="saturateamount">saturate(amount)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Adjusts the saturation.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">saturate&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="contrastamount">contrast(amount)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Adjusts the contrast.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">contrast&lt;/span>(&lt;span style="color:#ae81ff">1.6&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="brightnessamount">brightness(amount)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Adjusts the brightness.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">brightness&lt;/span>(&lt;span style="color:#ae81ff">0.4&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="invertamount">invert(amount)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Inverts the colors.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">invert&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="lumathreshold-tolerance">luma(threshold, tolerance)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Applies a luma key.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">luma&lt;/span>(&lt;span style="color:#ae81ff">0.5&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="posterizebins-gamma">posterize(bins, gamma)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Applies a posterization effect.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">posterize&lt;/span>(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">0.6&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="geometry">Geometry&lt;/h2>
&lt;h3 id="rotateangle-speed">rotate(angle, speed)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Rotates the source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="scaleamount-xmult-ymult-offsetx-offsety">scale(amount, xMult, yMult, offsetX, offsetY)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Scales the source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">scale&lt;/span>(&lt;span style="color:#ae81ff">1.5&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">0.5&lt;/span>, &lt;span style="color:#ae81ff">0.5&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="pixelatepixelx-pixely">pixelate(pixelX, pixelY)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Applies a pixelation effect.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">pixelate&lt;/span>(&lt;span style="color:#ae81ff">20&lt;/span>, &lt;span style="color:#ae81ff">20&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="repeatrepeatx-repeaty-offsetx-offsety">repeat(repeatX, repeatY, offsetX, offsetY)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Repeats the source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">repeat&lt;/span>(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="repeatxreps-offset">repeatX(reps, offset)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Repeats the source horizontally.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">repeatX&lt;/span>(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="repeatyreps-offset">repeatY(reps, offset)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Repeats the source vertically.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">repeatY&lt;/span>(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="scrollscrollx-scrolly-speedx-speedy">scroll(scrollX, scrollY, speedX, speedY)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Scrolls the source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">scroll&lt;/span>(&lt;span style="color:#ae81ff">0.5&lt;/span>, &lt;span style="color:#ae81ff">0.5&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="scrollxscrollx-speed">scrollX(scrollX, speed)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Scrolls the source horizontally.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">scrollX&lt;/span>(&lt;span style="color:#ae81ff">0.5&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="scrollyscrolly-speed">scrollY(scrollY, speed)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Scrolls the source vertically.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">scrollY&lt;/span>(&lt;span style="color:#ae81ff">0.5&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="kaleidnsides">kaleid(nSides)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Applies a kaleidoscope effect.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">kaleid&lt;/span>(&lt;span style="color:#ae81ff">4&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="blending">Blending&lt;/h2>
&lt;h3 id="addamount">add(amount)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Adds two sources.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="subamount">sub(amount)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Subtracts one source from another.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">sub&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="layer">layer()&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Overlays one source on another.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">layer&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>)).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="blendamount">blend(amount)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Blends two sources.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">blend&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">0.5&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="multamount">mult(amount)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Multiplies two sources.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">mult&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="diff">diff()&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Calculates the difference between two sources.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">diff&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>)).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="mask">mask()&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Applies a mask to the source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">mask&lt;/span>(&lt;span style="color:#a6e22e">shape&lt;/span>(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">0.3&lt;/span>, &lt;span style="color:#ae81ff">0.01&lt;/span>)).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="utilities">Utilities&lt;/h2>
&lt;h3 id="out">out()&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Outputs the current buffer.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="render">render()&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Renders the specified buffer.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">render&lt;/span>(&lt;span style="color:#a6e22e">o0&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="initcamcameranumber">initCam(cameraNumber)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Initializes the webcam.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">s0&lt;/span>.&lt;span style="color:#a6e22e">initCam&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;span style="color:#a6e22e">src&lt;/span>(&lt;span style="color:#a6e22e">s0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="initvideo">initVideo()&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Initializes a video source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">s0&lt;/span>.&lt;span style="color:#a6e22e">initVideo&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;https://6120.eu/public/storm.mp4&amp;#34;&lt;/span>)
&lt;span style="color:#a6e22e">src&lt;/span>(&lt;span style="color:#a6e22e">s0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="initimage">initImage()&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Initializes an image source.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">s0&lt;/span>.&lt;span style="color:#a6e22e">initImage&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;file:///path/to/image.jpg&amp;#34;&lt;/span>)
&lt;span style="color:#a6e22e">src&lt;/span>(&lt;span style="color:#a6e22e">s0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="srctexture">src(texture)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Sets the source for the pipeline.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">src&lt;/span>(&lt;span style="color:#a6e22e">o0&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="time">time&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Global variable representing elapsed time.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">rotate&lt;/span>(() =&amp;gt; &lt;span style="color:#a6e22e">time&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="speed">speed&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Global variable controlling playback speed.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">speed&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0.5&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="mouse">mouse&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Global variable representing mouse position.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">rotate&lt;/span>(() =&amp;gt; &lt;span style="color:#a6e22e">mouse&lt;/span>.&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">0.01&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ashow">a.show&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Show FFT volume meter.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">a&lt;/span>.&lt;span style="color:#a6e22e">show&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="afft">a.fft&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Array representing audio frequency data.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#ae81ff">60&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>).&lt;span style="color:#a6e22e">modulate&lt;/span>(&lt;span style="color:#a6e22e">noise&lt;/span>(() =&amp;gt; &lt;span style="color:#a6e22e">a&lt;/span>.&lt;span style="color:#a6e22e">fft&lt;/span>[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">0.1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="asetsmooth">a.setSmooth()&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Sets the smoothing for audio analysis.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">a&lt;/span>.&lt;span style="color:#a6e22e">setSmooth&lt;/span>(&lt;span style="color:#ae81ff">0.8&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="asetbins">a.setBins()&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Sets the number of frequency bins for audio analysis.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">a&lt;/span>.&lt;span style="color:#a6e22e">setBins&lt;/span>(&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="asetcutoff">a.setCutoff()&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Sets the cutoff frequency for audio analysis.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">a&lt;/span>.&lt;span style="color:#a6e22e">setCutoff&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="asetscale">a.setScale()&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Sets the scale for audio analysis.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">a&lt;/span>.&lt;span style="color:#a6e22e">setScale&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="midi">MIDI&lt;/h2>
&lt;h3 id="await-midistartshow">await midi.start().show()&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Start MIDI connection and display interface.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">midi&lt;/span>.&lt;span style="color:#a6e22e">start&lt;/span>().&lt;span style="color:#a6e22e">show&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="note">note('*')&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Get MIDI note value from any channel.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">solid&lt;/span>(&lt;span style="color:#a6e22e">note&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;*&amp;#39;&lt;/span>), &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ccchannel-controller">cc(channel, controller)&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Get MIDI CC (Continuous Controller) value.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">osc&lt;/span>(&lt;span style="color:#a6e22e">cc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="aft">aft('*')&lt;/h3>
&lt;p>&lt;strong>Description:&lt;/strong> Get MIDI aftertouch value from any channel.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">solid&lt;/span>(&lt;span style="color:#a6e22e">aft&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;*&amp;#39;&lt;/span>), &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>).&lt;span style="color:#a6e22e">out&lt;/span>()
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="useful-links">Useful links&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hydra.ojack.xyz/api/">Hydra Functions API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hydra-book.glitches.me/">Hydra Book&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/arnoson/hydra-midi">MIDI Integration&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://flok.cc/">Hydra Collaborative Editor (Flok)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://discord.com/invite/ZQjfHkNHXC">Hydra Discord Community&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://6120.eu/workshop-hydra">Updated Cheat Sheet&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>StarkNet Phase 1 - Freebox Validator</title><link>https://6120.eu/posts/starknet-staking-p1/</link><pubDate>Mon, 31 Mar 2025 19:00:03 +0100</pubDate><guid>https://6120.eu/posts/starknet-staking-p1/</guid><description>Introduction This post is the beginning of a series of blog posts on hosting Starknet nodes. I always enjoy the challenges of hosting high-availability infrastructures and blockchain nodes always have their own set of problematics: large underlying databases, reactivity, syncing &amp;amp; signing speed&amp;hellip; May this series help the path towards decentralization of Starknet. It begins with the cheapest system I could put my hands on.
Phase 1 StarkNet staking 1st phase consist of solely running a full RPC node, at the time of writing, staking ask for 20_000 Strk tokens (~3700$).</description><content>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This post is the beginning of a series of blog posts on hosting Starknet nodes. I always enjoy the challenges of hosting high-availability infrastructures and blockchain nodes always have their own set of problematics: large underlying databases, reactivity, syncing &amp;amp; signing speed&amp;hellip; May this series help the path towards decentralization of Starknet. It begins with the cheapest system I could put my hands on.&lt;/p>
&lt;h1 id="phase-1">Phase 1&lt;/h1>
&lt;p>&lt;a href="https://www.starknet.io/blog/staking-phase-1/">StarkNet staking 1st phase&lt;/a> consist of solely running a full RPC node, at the time of writing, staking ask for 20_000 Strk tokens (~3700$). As there is no validator duties linking performance and reward it&amp;rsquo;s an ideal moment to start scaling from the bottom.&lt;/p>
&lt;p>As a minimum viable product I choose a Virtual Machine (VM) running on my Internet Service Provider(ISP) router Freebox, because it&amp;rsquo;s a system that cost me almost nothing, always running and can host VMs.&lt;/p>
&lt;h2 id="hardware-setup">Hardware Setup&lt;/h2>
&lt;p>The Freebox Delta router, while primarily designed for home networking, surprisingly packs enough punch for our needs. Under the hood, it features a Quad-Core Armv8 Cortex A-72 processor and 2GB of RAM, which while modest, proved sufficient for our initial testing phase. The storage setup: two Crucial BX500 SATA SSDs in a 1TB RAID1 configuration.&lt;/p>
&lt;h2 id="initial-setup-and-challenges">Initial Setup and Challenges&lt;/h2>
&lt;p>Getting the StarkNet full node up and running on the Freebox was an exercise in resource optimization. The initial state synchronization proved to be the first major hurdle using a combination of snapshot and desktop computer, with the limited CPU &amp;amp; RAM. The process took several days to complete, with the node frequently hitting memory limits during peak synchronization periods. Network bandwidth, while not a primary concern give the Freebox&amp;rsquo;s gigabit connection a low latency, and careful monitoring to ensure it didn&amp;rsquo;t impact household internet usage.&lt;/p>
&lt;h2 id="validator-implementation">Validator Implementation&lt;/h2>
&lt;p>The validator setup was surprisingly straightforward once the full node was operational as there was no implementation existing (Note, there are now 2 implementations existing). Monitoring was handled through a combination of Prometheus and Grafana, giving us real-time insights into the node&amp;rsquo;s performance and health.&lt;/p>
&lt;h2 id="performance-analysis">Performance Analysis&lt;/h2>
&lt;p>During normal operation, the Freebox validator handled block processing adequately, maintaining sync with the network without issues. However, the limitations became apparent during high transaction volume periods. The quad-core ARM processor, while efficient, struggled to keep up with the computational demands of processing large blocks during network congestion. This was particularly evident during High TPS events, where transaction throughput would spike dramatically.&lt;/p>
&lt;p>&lt;img src="https://6120.eu/img/posts/starknet-p1/rpc-grafana-head.png" alt="">&lt;/p>
&lt;h2 id="lessons-learned">Lessons Learned&lt;/h2>
&lt;p>The Freebox experiment taught us several valuable lessons about validator requirements. While the setup worked for Phase 1&amp;rsquo;s basic requirements, it highlighted the importance of having headroom for processing power during network stress. The RAID1 storage setup proved fine, but the 2GB RAM limitation was a constant challenge. For future phases, we&amp;rsquo;ll need to consider more powerful hardware for full node, and separate signers particularly as validator duties become active.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>The Freebox validator experiment was a valuable learning experience in Phase 1 of StarkNet&amp;rsquo;s staking journey. While the hardware limitations prevented optimal performance during high-stress periods, it successfully demonstrated that running a validator doesn&amp;rsquo;t require expensive enterprise-grade equipment. The experience has given us valuable insights into the minimum requirements for future phases and helped us identify areas for improvement in our setup.&lt;/p>
&lt;h1 id="usefuls-links">Usefuls links&lt;/h1>
&lt;p>Divers elements to help operate and setup the first phase 1.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://gist.github.com/Magicking/422a868e446564912eaa3f362b44f62f">Pathfinder v0.16.4&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>An optional &lt;a href="https://gist.github.com/Magicking/73cc2802da9cd6c76905dac670b72cac">Grafana JSON Dashboard&lt;/a> to monitor your Pathfinder instances.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://6120.eu/img/posts/starknet-p1/pathfinder-metrics.png" alt="">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://starknet-faucet.vercel.app/">Starknet Testnet Faucet&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Approve and stake Starknet token using &lt;a href="https://book.starkli.rs/installation#install-from-source">starkli&lt;/a> CLIs commands works also via browser via &lt;a href="https://sepolia.starkscan.co/token/0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d#read-write-contract-sub-write">1&lt;/a> and &lt;a href="https://sepolia.starkscan.co/contract/0x03745ab04a431fc02871a139be6b93d9260b0ff3e779ad9c8b377183b23109f1#read-write-contract-sub-write">2&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-starkli" data-lang="starkli">approve \
0x03745ab04a431fc02871a139be6b93d9260b0ff3e779ad9c8b377183b23109f1 \
u256:1000000000000000000 \
--network=sepolia
starkli invoke 0x03745ab04a431fc02871a139be6b93d9260b0ff3e779ad9c8b377183b23109f1 \
stake \
&amp;lt;reward_address&amp;gt; &amp;lt;operational_address&amp;gt; 1000000000000000000 1 100 \
--network=sepolia
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>docker compose&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://hub.docker.com/r/prom/node-exporter">node-exporter&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Pathfinder&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/Magicking/aarch64-starknet-validator/issues/1">Issue dump&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;p>Moving forward, we&amp;rsquo;re considering several options to improve our setup. A dedicated mini-PC with more RAM and a more powerful processor would be the logical next step, while still maintaining the cost-effectiveness that made the Freebox experiment appealing. We&amp;rsquo;re also exploring ways to optimize the node software to better handle high-throughput periods. And keep the Freebox as a passerel to a secure element.&lt;/p></content></item><item><title>Onchain Summer Hackaton porting Graffiti NFT to Base Blockchain</title><link>https://6120.eu/posts/graffiti-base/</link><pubDate>Sun, 30 Jun 2024 00:00:00 +0000</pubDate><guid>https://6120.eu/posts/graffiti-base/</guid><description>Ethernal Graffiti Onchain On Base It offers the solution to let a digital drawing similar as street tag onchain the Base blockchain as part of its state.
As long as the Base blockchain exists, the picture and the mean to display it will work.
Removing the most commonly unplanned maintenance cost of NFT artworks for cheaper than the price of spray paint can.
License: Creative Commons Usage: https://youtu.be/tZ01D_xwHCk</description><content>&lt;h1 id="ethernal-graffiti-onchain-on-base">Ethernal Graffiti Onchain On Base&lt;/h1>
&lt;p>It offers the solution to let a digital drawing similar as street tag onchain the Base blockchain as part of its state.&lt;/p>
&lt;p>As long as the Base blockchain exists, the picture and the mean to display it will work.&lt;/p>
&lt;p>Removing the most commonly unplanned maintenance cost of NFT artworks for cheaper than the price of spray paint can.&lt;/p>
&lt;h2 id="license-creative-commons">License: Creative Commons&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Usage: &lt;a href="https://youtu.be/tZ01D_xwHCk">https://youtu.be/tZ01D_xwHCk&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Code source: &lt;a href="https://github.com/Magicking/g-base">https://github.com/Magicking/g-base&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="previous-work">Previous work&lt;/h1>
&lt;ul>
&lt;li>Reaper Gambit Epitaph
Onchain NFT software artwork for the Reaper Gambit memcoin communities&lt;/li>
&lt;/ul>
&lt;h1 id="stacks">Stacks&lt;/h1>
&lt;ul>
&lt;li>Base Blockchain&lt;/li>
&lt;li>Forge&lt;/li>
&lt;li>Solidity&lt;/li>
&lt;li>Svelte&lt;/li>
&lt;li>Tenderly&lt;/li>
&lt;/ul></content></item><item><title>Graffiti NFT</title><link>https://6120.eu/posts/graffiti/</link><pubDate>Mon, 06 May 2024 14:32:03 +0100</pubDate><guid>https://6120.eu/posts/graffiti/</guid><description>Graffiti NFT
About The Project Introducing Graffiti NFT: A New Frontier in Digital Graffiti NFT Art Welcome to Graffiti NFT, an innovative project revolutionizing the nft digital art world! With our unique approach, we combine creativity, accessibility, and interactivity in a way that sets us apart from other NFT projects. Let’s dive into the core aspects that make Graffiti NFT a game-changer.
Make Graffiti: Unleash Your Creativity At the heart of Graffiti NFT is the &amp;lsquo;Make Art&amp;rsquo; feature.</description><content>&lt;p>&lt;a href="https://g.6120.eu">Graffiti NFT&lt;/a>&lt;/p>
&lt;h1 id="about-the-project">About The Project&lt;/h1>
&lt;h2 id="introducing-graffiti-nft-a-new-frontier-in-digital-graffiti-nft-art">Introducing Graffiti NFT: A New Frontier in Digital Graffiti NFT Art&lt;/h2>
&lt;p>Welcome to Graffiti NFT, an innovative project revolutionizing the nft digital art world! With our unique approach, we combine creativity, accessibility, and interactivity in a way that sets us apart from other NFT projects. Let’s dive into the core aspects that make Graffiti NFT a game-changer.&lt;/p>
&lt;h2 id="make-graffiti-unleash-your-creativity">Make Graffiti: Unleash Your Creativity&lt;/h2>
&lt;p>At the heart of Graffiti NFT is the &amp;lsquo;Make Art&amp;rsquo; feature. This feature offers a 128-pixel square canvas on which you can create your masterpiece using a single color from the entire RGB palette. This minimalist approach challenges graffiters to think outside the box and create truly unique and expressive works of a graffiti. The simplicity of the tools amplifies creativity, pushing artists to explore new possibilities within tight constraints.&lt;/p>
&lt;p>@TODO: ADD VIDEO OF THE MAKING OF AN ARTWORK&lt;/p>
&lt;h2 id="free-to-mint-art-for-everyone">Free-to-Mint: Art for Everyone&lt;/h2>
&lt;p>We believe that art should be accessible to everyone. That’s why we’ve made minting nfts on Graffiti NFT completely free (except gas). You can mint your creations without worrying about upfront costs. By lowering the barrier to entry, we aim to foster a diverse and vibrant community of creators.&lt;/p>
&lt;h2 id="pay-to-gain-the-thrill-of-the-chase">Pay-to-Gain: The Thrill of the Chase&lt;/h2>
&lt;p>Our &amp;lsquo;Pay-to-Steal&amp;rsquo; feature introduces a thrilling dynamic to the nft marketplace. Here&amp;rsquo;s how it works: nfts can be bought, sold, or traded like on any other platform, but there&amp;rsquo;s a twist. Someone can pay the collection floor price to claim your NFT. This adds an exciting layer of competition and strategy, encouraging users to stay engaged and keep an eye on their favorite pieces.&lt;/p>
&lt;h2 id="farm-gold-rewarding-creativity">Farm Gold: Rewarding Creativity&lt;/h2>
&lt;p>Creating Graffitis isn’t just about expression; it’s also about earning rewards. Enter &amp;lsquo;Farm Gold,&amp;rsquo; our unique point system that rewards artists based on the popularity and engagement of their NFTs. Gold points are redistributed to creators when there&amp;rsquo;s sufficient activity, providing ongoing incentives for artists to continue producing amazing work. It&amp;rsquo;s our way of ensuring that creativity and effort are continually recognized and rewarded.&lt;/p>
&lt;h2 id="why-graffiti-nft">Why Graffiti NFT?&lt;/h2>
&lt;p>In a rapidly evolving NFT landscape, Graffiti NFT stands out by making art creation and ownership more interactive and rewarding. Our project is built on the principles of accessibility, creativity, and community. By offering free minting, dynamic market interactions, and continuous rewards, we’re creating a platform where artists and collectors alike can thrive.&lt;/p>
&lt;h2 id="get-involved">Get Involved&lt;/h2>
&lt;p>Are you ready to be part of this exciting new venture? Whether you&amp;rsquo;re a graffiter eager to showcase your work or a collector looking for unique pieces, Graffiti NFT has something for everyone. Stay tuned for more updates, and get ready to unleash your creativity in the world of Graffiti NFT!&lt;/p>
&lt;p>&lt;a href="https://g.6120.eu/mint">Paint your Graffiti&lt;/a>&lt;/p>
&lt;h1 id="technical-details">Technical Details&lt;/h1>
&lt;h2 id="artwork">Artwork&lt;/h2>
&lt;ul>
&lt;li>Canvas size: 128x128 pixels&lt;/li>
&lt;li>Color: monocolor, 1 out of 16,777,214 (RGB) for each NFT&lt;/li>
&lt;li>Image format: BMP&lt;/li>
&lt;li>Storage: Blast blockchain state&lt;/li>
&lt;/ul>
&lt;h2 id="smart-contract">Smart Contract&lt;/h2>
&lt;p>The Graffiti NFT smart contract is deployed on the Blast mainnet at the address &lt;a href="https://blastscan.io/address/0x971b2d96efc3cffb8bace89a17abfed0b8743cd1">0x971b2d96efc3cffb8bace89a17abfed0b8743cd1&lt;/a>. The contract is written in Solidity, follows the ERC-721 standard for non-fungible tokens and is upgradable, it has no storage necessity for the artworks, they will stay forever on the Blast blockchain state. You can view the contract source code on &lt;a href="https://blastscan.io/address/0x971b2d96efc3cffb8bace89a17abfed0b8743cd1#readProxyContract">Blastscan&lt;/a>.&lt;/p>
&lt;h2 id="tokenomics">Tokenomics&lt;/h2>
&lt;p>Currently the smart contract is accruing eth from the Pay-to-gain feature, updates will add redistribution of the eth to the minters.
Gold points will be redistributed to the minters and Pay-to-gain enjoyers.&lt;/p>
&lt;p>@TODO: ADD TOKENOMICS GRAPH&lt;/p>
&lt;h1 id="roadmap">Roadmap&lt;/h1>
&lt;ul>
&lt;li>2024-04-15: Launch of the Graffiti NFT project on Blast&lt;/li>
&lt;li>XXXX-XX-XX: Anonymous minting&lt;/li>
&lt;li>2024-07-14: Update of the tokenomics&lt;/li>
&lt;/ul>
&lt;h3 id="paint-your-graffitihttpsg6120eumint">&lt;a href="https://g.6120.eu/mint">Paint your Graffiti&lt;/a>&lt;/h3>
&lt;h3 id="skylighthttpssky-light-slcom">&lt;a href="https://sky-light-sl.com">Sky.Light&lt;/a>&lt;/h3>
&lt;h3 id="xtwitterhttpsxcomgraffitiblkchn">&lt;a href="https://x.com/GraffitiBLKCHN">X/Twitter&lt;/a>&lt;/h3></content></item><item><title>{In,On}Chain discussion</title><link>https://6120.eu/posts/in-on-chain/</link><pubDate>Sat, 03 Feb 2024 13:22:00 +0100</pubDate><guid>https://6120.eu/posts/in-on-chain/</guid><description>In the rapidly evolving realm of Non-Fungible Tokens (NFTs), distinguishing between &amp;ldquo;inchain&amp;rdquo; and &amp;ldquo;onchain&amp;rdquo; is crucial for understanding how digital artworks are stored and processed within the blockchain ecosystem. This article delves into the nuanced differences between these two concepts, shedding light on their implications for NFT artwork and its interaction with blockchain technology.
Inchain vs. Onchain: Definitions and Distinctions Inchain refers to data that is both stored and processed on the blockchain.</description><content>&lt;p>In the rapidly evolving realm of Non-Fungible Tokens (NFTs), distinguishing between &amp;ldquo;inchain&amp;rdquo; and &amp;ldquo;onchain&amp;rdquo; is crucial for understanding how digital artworks are stored and processed within the blockchain ecosystem. This article delves into the nuanced differences between these two concepts, shedding light on their implications for NFT artwork and its interaction with blockchain technology.&lt;/p>
&lt;h1 id="inchain-vs-onchain-definitions-and-distinctions">Inchain vs. Onchain: Definitions and Distinctions&lt;/h1>
&lt;p>Inchain refers to data that is both stored and processed on the blockchain. When applied to NFT artwork, this means that the media is processed into its displayable form by the blockchain&amp;rsquo;s first execution layer, such as the Ethereum Virtual Machine (EVM) for Ethereum. This process ensures that the artwork does not require Turing complete processing after the initial onchain execution, making it directly observable from the blockchain without additional postchain processing.&lt;/p>
&lt;p>Onchain, in contrast, pertains to data that is stored on the blockchain but processed offchain. This means that while the media is stored within the blockchain, the actual rendering and processing of the artwork occur offchain, often in real-time and using external technologies like JavaScript. NFTs that necessitate such Postchain Processing (PCP) include those that are displayed or interacted with through browsers, desktop applications, or games.&lt;/p>
&lt;h2 id="challenges-and-considerations">Challenges and Considerations&lt;/h2>
&lt;p>Selecting the appropriate level of inchain versus onchain processing for a specific media type involves navigating multiple challenges. These include considering the media&amp;rsquo;s format (e.g., raster image, interactive vector image, sound) and the processing capabilities required at each layer (EVM to JavaScript, Equalizer, etc.). The decision hinges on the unique requirements and constraints of each use case, aiming to strike a balance between onchain storage efficiency and offchain processing flexibility.&lt;/p>
&lt;p>Differentiating between pure SVG/HTML and Turing-complete languages highlights a conceptual challenge due to the inherent nature of SVG (Scalable Vector Graphics) and HTML (HyperText Markup Language) as descriptive languages, rather than computational or programming languages. SVG and HTML are fundamentally designed to describe the layout, structure, and presentation of content on the web, lacking the ability to perform arbitrary computations or algorithmic processes that define Turing completeness. This distinction becomes blurred when considering the interactive and dynamic capabilities that can be embedded within SVG and HTML documents through the use of JavaScript and CSS. While SVG and HTML alone do not possess the computational capabilities to be considered Turing complete, their integration with scripting languages enables them to support complex interactions and behaviors, making it difficult to separate their descriptive nature from the potential for Turing-complete operations facilitated by external scripts. This complexity underscores the challenge in categorizing SVG and HTML strictly as non-Turing-complete languages, especially in the context of modern web applications where the lines between content description and computational logic increasingly intersect.&lt;/p>
&lt;h2 id="media-types-and-postchain-processing">Media Types and Postchain Processing&lt;/h2>
&lt;p>The following table highlights various media types and their requirements for PostChain Processing (PCP):&lt;/p>
&lt;p>Media types with Postchain Processing:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Media&lt;/th>
&lt;th>Audio&lt;/th>
&lt;th>Image&lt;/th>
&lt;th>PCP&lt;/th>
&lt;th>Example&lt;/th>
&lt;th>Comments&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/BMP_file_format">BMP&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;a href="https://opensea.io/fr/assets/ethereum/0x23581767a106ae21c074b2276d25e5c3e136a68b/8173">MoonBirds&lt;/a>, &lt;a href="https://opensea.io/assets/ethereum/0x46d0d00e847ed9c2756cfd941e70d99e9152a22f/0">ReaperGambitEpitaph&lt;/a>&lt;/td>
&lt;td>Stored on Ethereum mainnet&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/GIF#File_format">GIF&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;td>n/a&lt;/td>
&lt;td>n/a&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.khronos.org/assets/uploads/developers/library/overview/gltf-overview.pdf">GLTF&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>?&lt;/td>
&lt;td>&lt;a href="https://www.ord.io/489270">SkyLight&lt;/a>&lt;/td>
&lt;td>Bitcoin Ordinal 489270&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/JPEG#Syntax_and_structure">JPG&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;td>n/a&lt;/td>
&lt;td>n/a&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://https://en.wikipedia.org/wiki/MP4_file_format#Data_streams">MP4&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>?&lt;/td>
&lt;td>n/a&lt;/td>
&lt;td>May contains multiple media streams&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/WAV#">WAV&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;a href="https://opensea.io/assets/ethereum/0x9d27527ada2cf29fbdab2973cfa243845a08bd3f/405">Bleeps&lt;/a>&lt;/td>
&lt;td>Onchain sound note&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/Ogg#">OGG&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/Continuous_Media_Markup_Language">X&lt;/a>&lt;/td>
&lt;td>n/a&lt;/td>
&lt;td>n/a&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/HTML#">HTML&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;a href="https://ordinals.com/content/521f8eccffa4c41a3a7728dd012ea5a4a02feed81f41159231251ecf1e5c79dai0">Yet Another Doom Clone&lt;/a>&lt;/td>
&lt;td>Ordinal 466&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SVG">SVG&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SVG_animation">X&lt;/a>&lt;/td>
&lt;td>n/a&lt;/td>
&lt;td>n/a&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>These examples underscore the versatility and potential of inchain NFTs for ensuring compatibility across various devices and platforms, opening new avenues for interactive and dynamic artwork creation via smart contracts.&lt;/p>
&lt;h1 id="costs">Costs&lt;/h1>
&lt;p>Inchain data insertion typically incurs lower costs compared to onchain methods due to the ability to leverage RPC provider execution to optimize the final artwork. The specifics of cost reduction may vary across different implementations. Additionally, storage maintenance is often provided at no additional cost on most blockchains.&lt;/p>
&lt;p>Conversely, offchain storage solutions are significantly more cost-effective but require ongoing maintenance. Over an extended period, these maintenance expenses can accumulate, potentially surpassing the initial cost savings.&lt;/p>
&lt;h1 id="conclusion">Conclusion&lt;/h1>
&lt;p>The distinction between inchain and onchain NFTs lies at the heart of how digital artworks are stored, processed, and experienced within the blockchain framework. While inchain NFTs offer a seamless experience without the need for additional processing, onchain NFTs provide a canvas for more complex and interactive artworks, albeit with the requirement for external processing resources. As the NFT landscape continues to evolve, understanding these nuances becomes paramount for creators, collectors, and technologists alike.&lt;/p>
&lt;h2 id="future-work---nft-dynamism">Future work - NFT Dynamism&lt;/h2>
&lt;p>NFT can be interactive and evolve, here is a mind map laying out the disambiugation work.&lt;/p>
&lt;p>Click &lt;a href="https://viewer.diagrams.net/index.html?target=blank&amp;amp;highlight=0000ff&amp;amp;nav=1&amp;amp;title=Dynamic%20NFT%20disambiguation.drawio#Uhttps%3A%2F%2Fdrive.google.com%2Fuc%3Fid%3D1EKwLBN6kVsxHzujLLU3eX9c4ReQ2EUXX%26export%3Ddownload">here&lt;/a> if you have trouble navigating the document.&lt;/p>
&lt;iframe frameborder="0" style="min-width:1024px; min-height:768px; width:1024px;height:768px;" src="https://viewer.diagrams.net/?target=blank&amp;highlight=0000ff&amp;nav=1&amp;title=Dynamic%20NFT%20disambiguation.drawio#Uhttps%3A%2F%2Fdrive.google.com%2Fuc%3Fid%3D1EKwLBN6kVsxHzujLLU3eX9c4ReQ2EUXX%26export%3Ddownload">&lt;/iframe>
&lt;p>More ressources:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://onchainchecker.xyz/">On-Chain Checker&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.simondlr.com/posts/flavours-of-on-chain-svg-nfts-on-ethereum">Simon de la Rouviere&amp;rsquo;s Flavours of on-chain SVG blog post&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.fullyonchain.art/">Discover On-Chain NFT Projects&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Note technique du paypal coin</title><link>https://6120.eu/drafts/pyusd/</link><pubDate>Mon, 07 Aug 2023 21:50:00 +0100</pubDate><guid>https://6120.eu/drafts/pyusd/</guid><description>Introduction Après être tombé sur la news https://newsroom.paypal-corp.com/2023-08-07-PayPal-Launches-U-S-Dollar-Stablecoin qui annonce la sortie d&amp;rsquo;un jeton ERC20 par PayPal et Paxos ainsi qu&amp;rsquo;après une recherche sur Twitter on tombe sur quelques informations techniques intéressantes.
C&amp;rsquo;est un jeton de type ERC20 qui peut-être mis en pause, dont la destruction (Burn) et la création (Mint) de sa quantité est régi par une entitée centralisée.
Composition du jeton Le proxy du jeton avec lequel les utilisateurs vont interragir est 0x6c3ea9036406852006290770BEdFcAbA0e23A0e8, en oscultant un peu plus le smart-contract, on s&amp;rsquo;aperçoit qu&amp;rsquo;il y&amp;rsquo;a eu plusieurs implémentation du jeton au cours du passé</description><content>&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>Après être tombé sur la news &lt;a href="https://newsroom.paypal-corp.com/2023-08-07-PayPal-Launches-U-S-Dollar-Stablecoin">https://newsroom.paypal-corp.com/2023-08-07-PayPal-Launches-U-S-Dollar-Stablecoin&lt;/a> qui annonce la sortie d&amp;rsquo;un jeton ERC20 par PayPal et Paxos ainsi qu&amp;rsquo;après une recherche sur Twitter on tombe sur quelques informations techniques intéressantes.&lt;/p>
&lt;p>C&amp;rsquo;est un jeton de type ERC20 qui peut-être mis en pause, dont la destruction (Burn) et la création (Mint) de sa quantité est régi par une entitée centralisée.&lt;/p>
&lt;h1 id="composition-du-jeton">Composition du jeton&lt;/h1>
&lt;p>Le &lt;a href="https://ethereum.org/en/developers/docs/smart-contracts/upgrading/">proxy&lt;/a> du jeton avec lequel les utilisateurs vont interragir est &lt;a href="https://etherscan.io/token/0x6c3ea9036406852006290770bedfcaba0e23a0e8">0x6c3ea9036406852006290770BEdFcAbA0e23A0e8&lt;/a>, en oscultant un peu plus le smart-contract, on s&amp;rsquo;aperçoit qu&amp;rsquo;il y&amp;rsquo;a eu plusieurs implémentation du jeton au cours du passé&lt;/p>
&lt;p>&lt;img src="https://6120.eu/img/posts/pyusd/1.png" alt="">&lt;/p>
&lt;p>et que l&amp;rsquo;ensemble des smart-contracts existent depuis environ 1 an, probablement une phase test avant l&amp;rsquo;annonce du 2023-08-07 étant donné un volume important de transaction précédant celle-ci.&lt;/p>
&lt;p>TODO SCREENSHOT OF PROXY DEPLOYMENT&lt;/p>
&lt;p>L&amp;rsquo;implémentation actuel du jeton étant &lt;a href="https://etherscan.io/address/0xe17b8adf8e46b15f3f9ab4bb9e3b6e31db09126e">0xe17b8adf8e46b15f3f9ab4bb9e3b6e31db09126e&lt;/a> la différence majeure avec le code source de l&amp;rsquo;implémentation précédente était le masquage des termes PayPal/PYUSD par Hopper USD/XYZ.&lt;/p>
&lt;p>C&amp;rsquo;est cette dernière que nous allons étudier, le proxy ne servant qu&amp;rsquo;à stocker l&amp;rsquo;état du smart-contract en lieu et place de l&amp;rsquo;implémentation.&lt;/p>
&lt;h1 id="analyse-technique">Analyse technique&lt;/h1>
&lt;p>En préambule, on observe que le contrat utilise une très ancienne version du langage Solidity &lt;code>0.4.24&lt;/code> en spécifiant la nécéssité des fonctions expérimentales de la version &lt;code>0.5&lt;/code>.&lt;/p>
&lt;p>Le smart-contract est plutôt généreux en commentaire notamment avec une annotation &lt;a href="">NatSpec&lt;/a> orienté développeur et plusieurs lignes au sein de chaque fonction.&lt;/p>
&lt;h2 id="fonctions">Fonctions&lt;/h2>
&lt;p>Les fonctionnalités présentes dans le smart-contract peuvent être regroupées en 6 familles différentes détaillé ci-dessous.&lt;/p>
&lt;h3 id="proxy">Proxy&lt;/h3>
&lt;h4 id="constructor">constructor&lt;/h4>
&lt;p>Fonction executée lors du déploiement de l&amp;rsquo;implémentation du smart-contract, ici l&amp;rsquo;implémentation est initializé puis mis en pause pour éviter toute erreur.&lt;/p>
&lt;h4 id="initialize">initialize&lt;/h4>
&lt;p>Fonction initialisant l&amp;rsquo;état du smart-contract tout en prévenant une ré-initialisation lors d&amp;rsquo;une mise à jour, appelle notamment une autre fonction privée &lt;code>initializeDomainSeparator&lt;/code> en charge de définir le prefix de délégation (le smart-contract et son nom).&lt;/p>
&lt;h3 id="erc20">ERC20&lt;/h3>
&lt;p>Les fonctions ci-desous ne sont pas utilisables si l&amp;rsquo;émetteur ou le récepteur des fonds ont été gelé.&lt;/p>
&lt;h4 id="allowance">allowance&lt;/h4>
&lt;p>Accesseur sur la limite de dépense d&amp;rsquo;un compte Ethereum pour un autre compte.&lt;/p>
&lt;h4 id="approve">approve&lt;/h4>
&lt;p>Définie la limite de dépense d&amp;rsquo;un compte Ethereum pour un autre compte.&lt;/p>
&lt;h4 id="decreaseapproval">decreaseApproval&lt;/h4>
&lt;p>Décroie la limite de dépense d&amp;rsquo;un compte Ethereum pour un autre compte.&lt;/p>
&lt;h4 id="increaseapproval">increaseApproval&lt;/h4>
&lt;p>Accroie la limite de dépense d&amp;rsquo;un compte Ethereum pour un autre compte.&lt;/p>
&lt;h4 id="balanceof">balanceOf&lt;/h4>
&lt;p>Retourne la quantité de jeton pour un compte Ethereum.&lt;/p>
&lt;h4 id="totalsupply">totalSupply&lt;/h4>
&lt;p>Retourne la quantité total de jeton.&lt;/p>
&lt;h4 id="transfer">transfer&lt;/h4>
&lt;p>Transfère la quantité de jeton d&amp;rsquo;un compte Ethereum vers un autre compte.&lt;/p>
&lt;h4 id="transferfrom">transferFrom&lt;/h4>
&lt;p>Transfère la quantité de jeton d&amp;rsquo;un compte Ethereum vers un autre compte au travers par le biais d&amp;rsquo;un tiers compte autorisé.&lt;/p>
&lt;h3 id="owner-admin">Owner Admin&lt;/h3>
&lt;p>Toutes les fonctions ci-dessous sont accessibles uniquement par le possesseur du smart-contract.&lt;/p>
&lt;h4 id="proposeowner">proposeOwner&lt;/h4>
&lt;p>Définie le potentiel nouveau compte possesseur du smart-contract.&lt;/p>
&lt;h4 id="disregardproposeowner">disregardProposeOwner&lt;/h4>
&lt;p>Annule le potentiel nouveau compte possesseur du smart-contract&lt;/p>
&lt;h4 id="claimownership">claimOwnership&lt;/h4>
&lt;p>Promeut le potentiel compte possesseur en nouveau possesseur.&lt;/p>
&lt;h4 id="reclaimpyusd">reclaimPYUSD&lt;/h4>
&lt;p>Transfère les jetons affectés au contrat au possesseur.&lt;/p>
&lt;h4 id="pause">pause&lt;/h4>
&lt;p>Mets en pause&lt;/p>
&lt;h4 id="unpause">unpause&lt;/h4>
&lt;h3 id="asset-protection-owner">Asset protection owner&lt;/h3>
&lt;pre>&lt;code>setAssetProtectionRole
- Définie le gestionnaire de protection des biens
freeze
- Gèle une addresse
unfreeze
- Dégèle une addresse
wipeFrozenAddress
- Détruit les fonds d'une addresse gelée
isFrozen
- Accesseur des addresses gelées
&lt;/code>&lt;/pre>
&lt;h3 id="gestion-de-la-quantité">Gestion de la quantité&lt;/h3>
&lt;pre>&lt;code>setSupplyController
- Définie le gestionnaire de quantité
increaseSupply
- Créé et transfère des jetons au gestionnaire de quantité
decreaseSupply
- Détruit des jetons du gestionnaire de quantité.
&lt;/code>&lt;/pre>
&lt;h3 id="gestion-de-la-délégation">Gestion de la délégation&lt;/h3>
&lt;pre>&lt;code>nextSeqOf
- Accesseur du nonce (nombre )
betaDelegatedTransfer
- Transfère des fonds au travers d'un tiers
- Le tiers n'est pas enforce par le protocole
- Il est possible de faire des transfères de 0 du moment que l'on paie des fees, cela semble être un
betaDelegatedTransferBatch
- Trans
isWhitelistedBetaDelegate
setBetaDelegateWhitelister
whitelistBetaDelegate
unwhitelistBetaDelegate
&lt;/code>&lt;/pre>
&lt;h2 id="notes">Notes&lt;/h2>
&lt;ul>
&lt;li>Utilisation d&amp;rsquo;accesseur qui sont déjà rajouté par défaut&lt;/li>
&lt;li>Fonction qui retourne toujours les mêmes constantes (vrai)&lt;/li>
&lt;/ul>
&lt;h1 id="conclusion">Conclusion&lt;/h1></content></item><item><title>Analyzing Ordinal GitHub issues</title><link>https://6120.eu/posts/analyzing-ordinal-github-issues-p2/</link><pubDate>Thu, 23 Mar 2023 04:19:55 +0100</pubDate><guid>https://6120.eu/posts/analyzing-ordinal-github-issues-p2/</guid><description>This article is a working draft; I will update it as I go.
If you have yet to read the first part of this series, you can find it here.
We built a tool to help us analyze GitHub issues. Below is the result in action or a page.
Regarding the output:
Titles are not passed through GPT, and they are raw user entries. Normalizing the title is a good next step.</description><content>&lt;p>This article is a working draft; I will update it as I go.&lt;/p>
&lt;p>If you have yet to read the first part of this series, you can find it &lt;a href="https://6120.eu/posts/analyzing-ordinal-github-issues/">here&lt;/a>.&lt;/p>
&lt;p>We built a tool to help us analyze GitHub issues. Below is the result in action or a &lt;a href="https://6120.eu/codes/analyzing-ordinal-github-issues-p2/issues-display.html">page&lt;/a>.&lt;/p>
&lt;iframe width="600" height="600" frameborder="0" src="https://6120.eu/codes/analyzing-ordinal-github-issues-p2/issues-display.html" allowfullscreen>&lt;/iframe>
&lt;p>Regarding the output:&lt;/p>
&lt;ul>
&lt;li>Titles are not passed through GPT, and they are raw user entries. Normalizing the title is a good next step.&lt;/li>
&lt;li>The body is more evident than the title most of the time.&lt;/li>
&lt;li>Red boxes are issues that need to be classified correctly.&lt;/li>
&lt;/ul>
&lt;p>Sampling over 31 issues &amp;ldquo;user-support&amp;rdquo; (10%) and doing this classification manually, assisted by
the AI tool, we make this classification:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">documentation&lt;/span>: &lt;span style="color:#ae81ff">1062&lt;/span>,&lt;span style="color:#ae81ff">1575&lt;/span>,&lt;span style="color:#ae81ff">1675&lt;/span>,&lt;span style="color:#ae81ff">1709&lt;/span>,&lt;span style="color:#ae81ff">1770&lt;/span>,&lt;span style="color:#ae81ff">1816&lt;/span>,&lt;span style="color:#ae81ff">1845&lt;/span>,&lt;span style="color:#ae81ff">1924&lt;/span>
&lt;span style="color:#f92672">new-feature&lt;/span>: &lt;span style="color:#ae81ff">1322&lt;/span>,&lt;span style="color:#ae81ff">1071&lt;/span>,&lt;span style="color:#ae81ff">1519&lt;/span>,&lt;span style="color:#ae81ff">1764&lt;/span>,&lt;span style="color:#ae81ff">1333&lt;/span>
&lt;span style="color:#f92672">wallet&lt;/span>: &lt;span style="color:#ae81ff">1071&lt;/span>,&lt;span style="color:#ae81ff">1519&lt;/span>
&lt;span style="color:#f92672">api&lt;/span>: &lt;span style="color:#ae81ff">1322&lt;/span>
&lt;span style="color:#f92672">user-support&lt;/span>: &lt;span style="color:#ae81ff">1379&lt;/span>,&lt;span style="color:#ae81ff">1623&lt;/span>,&lt;span style="color:#ae81ff">1672&lt;/span>,&lt;span style="color:#ae81ff">1770&lt;/span>,&lt;span style="color:#ae81ff">1774&lt;/span>,&lt;span style="color:#ae81ff">1796&lt;/span>,&lt;span style="color:#ae81ff">1837&lt;/span>,&lt;span style="color:#ae81ff">1850&lt;/span>,&lt;span style="color:#ae81ff">1915&lt;/span>,&lt;span style="color:#ae81ff">1930&lt;/span>,&lt;span style="color:#ae81ff">1932&lt;/span>
&lt;span style="color:#f92672">packaging&lt;/span>: &lt;span style="color:#ae81ff">1379&lt;/span>
&lt;span style="color:#f92672">frontend&lt;/span>: &lt;span style="color:#ae81ff">1437&lt;/span>
&lt;span style="color:#f92672">mime-content&lt;/span>: &lt;span style="color:#ae81ff">1468&lt;/span>,&lt;span style="color:#ae81ff">1438&lt;/span>
&lt;span style="color:#f92672">naming&lt;/span>: &lt;span style="color:#ae81ff">1518&lt;/span>,&lt;span style="color:#ae81ff">1709&lt;/span>
&lt;span style="color:#f92672">to-be-closed&lt;/span>: &lt;span style="color:#ae81ff">1709&lt;/span>,&lt;span style="color:#ae81ff">1779&lt;/span>,&lt;span style="color:#ae81ff">1816&lt;/span>,&lt;span style="color:#ae81ff">1925&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We see that the classification could be better. The model is not able to classify issues accurately. We have only ~10 out of ~30 issues classified correctly over a sample of 10% in the « user-support » label. It does help to read quickly over an issue; direct integration of this kind of tool is to be expected soon.&lt;/p>
&lt;p>The prompt of the model needs to be reworked to get the model to classify issues more accurately.&lt;/p>
&lt;p>Recommendations:&lt;/p>
&lt;ul>
&lt;li>Closure of old issues of non-contributor if there is no activity up to a determined amount of time.
&lt;ul>
&lt;li>A gitbot could help with this.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Labelling seems to be useful, at least for filtering.&lt;/li>
&lt;li>Issues templating with different models with an example of what to include could fast-track issue triaging in the future.&lt;/li>
&lt;/ul></content></item><item><title>Efficient Issue Analysis: Harnessing the Power of GPT-4 and GPT-3.5 for GitHub Repository Insights</title><link>https://6120.eu/posts/analyzing-ordinal-github-issues/</link><pubDate>Sat, 18 Mar 2023 08:38:51 +0100</pubDate><guid>https://6120.eu/posts/analyzing-ordinal-github-issues/</guid><description>TL;DR This post showcases a creative approach to analyzing issues in the Ordinal GitHub repository by leveraging the GitHub API, GPT-3.5, and GPT-4. The author demonstrates how to obtain the necessary data using the GitHub CLI, then uses GPT-4 to generate a prompt for GPT-3.5 to analyze the repository&amp;rsquo;s issues further.
Some key takeaways from this analysis include the following:
Automating the collection and analysis of issues and pull requests can save time and effort.</description><content>&lt;h1 id="tldr">TL;DR&lt;/h1>
&lt;p>This post showcases a creative approach to analyzing issues in the Ordinal GitHub repository by leveraging the GitHub API, GPT-3.5, and GPT-4. The author demonstrates how to obtain the necessary data using the GitHub CLI, then uses GPT-4 to generate a prompt for GPT-3.5 to analyze the repository&amp;rsquo;s issues further.&lt;/p>
&lt;p>Some key takeaways from this analysis include the following:&lt;/p>
&lt;p>Automating the collection and analysis of issues and pull requests can save time and effort.
AI models like GPT-4 and GPT-3.5 can help generate valuable insights and overviews of the issues.
This approach has certain limitations, such as model availability and token limits. However, overall, the method proves to be efficient and cost-effective.
The author provides links to the source code and the raw output of the analysis, along with examples of how to filter the result using jq play. This solution offers a practical way to quickly gain an understanding of a large corpus of issues in a repository, making it easier to identify and prioritize tasks.&lt;/p>
&lt;p>If you are still here, follow along.&lt;/p>
&lt;h1 id="why">Why&lt;/h1>
&lt;p>The &lt;a href="https://sky-light-sl.com/">SkyLight&lt;/a> collective is actively building on Ordinals; as part of our R&amp;amp;D process in creating our artworks, we contribute when we can.
We are taking our first baby steps in this land towards the reference implementation, trying to understand where it is and where it goes so that we can plant the seeds of our work.
When discovering a new project, the issues are great places to start leaning in, as they are an excellent and diverse source of information related to the project.
So we went into the &lt;a href="https://github.com/casey/ord">Ordinal GitHub repository&lt;/a> to understand what @casey, Ordinals developers, and everyday folks had to say about it.&lt;/p>
&lt;p>At the time of writing (2023-03-18), there are &lt;a href="https://github.com/casey/ord/issues">329 issues and 46 pull requests&lt;/a>. As &lt;a href="https://en.wikipedia.org/wiki/Lazy_evaluation">lazy&lt;/a> developers, we wanted to automate getting the issues, pull requests, and have an initial analysis. We had to make it so we could easily update the issues and re-run the analysis if needed.&lt;/p>
&lt;h1 id="getting-the-data">Getting the data&lt;/h1>
&lt;p>Using the &lt;a href="https://cli.github.com/">GitHub CLI&lt;/a>, we fetched ~1MB worth of data related to the Ordinal repository issues in the JSON format extracting the information we fed to our AI using the following format:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh issue list --json number,title,body,labels,updatedAt,comments,reactionGroups -L &lt;span style="color:#ae81ff">400&lt;/span> &amp;gt; issues.json
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://6120.eu/img/posts/analyzing-ordinal-github-issues/2023-03-18-090742_1308x84_scrot.png" alt="gh issue list &amp;ndash;json number,title,body,labels,updatedAt,comments,reactionGroups -L 400 | pv > issues.json">&lt;/p>
&lt;p>The how-to is pretty simple; we used the GitHub Command Line Interface (GH CLI) to get the issues and specified the flags to get the issue number, title, body, and comments,&amp;hellip; in JSON format. The -L flag limits the number of issues to 400 items, and pv(screenshot) gets us a progress bar while we redirect the output to a file called issues.json.&lt;/p>
&lt;h1 id="analyzing-the-json-data">Analyzing the JSON data&lt;/h1>
&lt;p>Example issue:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json"> {
&lt;span style="color:#f92672">&amp;#34;body&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;For the very first time, it was successful to create one inscription, now transactions are not confirmed, I suspect because of the small fee rate\r\n\r\n&amp;lt;img width=\&amp;#34;557\&amp;#34; alt=\&amp;#34;Снимок экрана 2023-03-11 в 21 30 29\&amp;#34; src=\&amp;#34;https://user-images.githubusercontent.com/53757772/224508408-186dad47-3935-4ad7-8032-5985409a87ff.png\&amp;#34;&amp;gt;\r\n\r\n&amp;lt;img width=\&amp;#34;804\&amp;#34; alt=\&amp;#34;Снимок экрана 2023-03-11 в 21 35 40\&amp;#34; src=\&amp;#34;https://user-images.githubusercontent.com/53757772/224508424-16d5f897-0e83-4a04-8c32-73930e2527fe.png\&amp;#34;&amp;gt;\r\n\r\nThe balance is completely debited\r\n\r\n&amp;lt;img width=\&amp;#34;563\&amp;#34; alt=\&amp;#34;Снимок экрана 2023-03-11 в 21 36 35\&amp;#34; src=\&amp;#34;https://user-images.githubusercontent.com/53757772/224508755-b202f4e0-dd2e-40cc-bea2-cdd10522bbe8.png\&amp;#34;&amp;gt;\r\n\r\n&amp;lt;img width=\&amp;#34;570\&amp;#34; alt=\&amp;#34;Снимок экрана 2023-03-11 в 21 37 04\&amp;#34; src=\&amp;#34;https://user-images.githubusercontent.com/53757772/224508790-e461a21c-8f2e-4a51-962f-cf6171d4b56e.png\&amp;#34;&amp;gt;\r\n\r\nhttps://mempool.space/tx/b8d7cd6ba8e2c3387d6c1dfd33ef542ed82aa36425a9a7c2f903a803aaca7015\r\n\r\n\r\n\r\n\r\n\r\nHelp me )&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;comments&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;IC_kwDOGhOAhc5XuYTN&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;author&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;login&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ysw1011&amp;#34;&lt;/span>
},
&lt;span style="color:#f92672">&amp;#34;authorAssociation&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;NONE&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;body&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;你需要设置fee：./ord --wallet tord wallet inscribe 1.html --fee-rate 6，但是你没有，所以你只能等，有一个清除本地内存池交易的bitcoin cli命令，但是我不建议你用，因为会把你钱包里数据给搞丢。所以你只能等。或者创建一个新钱包，把当前钱包余额转过去 同来产生新的UTXO&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;createdAt&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2023-03-16T11:26:11Z&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;includesCreatedEdit&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;isMinimized&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;minimizedReason&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;reactionGroups&amp;#34;&lt;/span>: [{
&lt;span style="color:#f92672">&amp;#34;content&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;THUMBS_UP&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;users&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;totalCount&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
}}],
&lt;span style="color:#f92672">&amp;#34;url&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://github.com/casey/ord/issues/1917#issuecomment-1471775949&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;viewerDidAuthor&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
}
],
&lt;span style="color:#f92672">&amp;#34;labels&amp;#34;&lt;/span>: [],
&lt;span style="color:#f92672">&amp;#34;number&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1917&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;title&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Transactions are not confirmed&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;updatedAt&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2023-03-16T11:26:11Z&amp;#34;&lt;/span>
}&lt;span style="color:#960050;background-color:#1e0010">,&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above JSON data explicit long strings of text containing the issue&amp;rsquo;s body, comments, and reaction 👍.
It is a good issue as it showcases multiple difficulties, contains various languages, and the title needs to be more explicit about the problem, which could be a challenge for the reviewer at first glance. More defined guidelines and issues templating could help make a more straightforward pathway for users to interact with the project.&lt;/p>
&lt;h1 id="ai-for-the-rescue">AI for the rescue&lt;/h1>
&lt;p>After learning much about prompt engineering over the last months, we wrote the prompt to generate the overview analysis. But after fiddling with &lt;a href="https://github.com/Magicking/awesome-chatgpt">a few prompt(s)&lt;/a> for a while, we were not able to get a decent result in the JSON output formatting by GPT-3.5; sentiment and labeling were working fine, though.&lt;/p>
&lt;p>Instead, we used GPT-4 to generate the prompt to be used by GPT-3.5 to produce the analysis, as, unfortunately, GPT-4 is yet to be available over the API.&lt;/p>
&lt;p>Who knows better to talk to a robot than another robot?&lt;/p>
&lt;p>&lt;img src="https://6120.eu/img/posts/analyzing-ordinal-github-issues/2023-03-18-090255_1180x1594_scrot.png" alt="Only robots can understand me.">&lt;/p>
&lt;p>The above ChatGPT-GPT-4 conversation showcases the ask and the returned prompt proposed as input for GPT-3.5.
It gives a prompt that&amp;rsquo;s quite effective at generating usable JSON outputs.
With a few logic rules and simple use of the OpenAI python package.
&lt;img src="https://6120.eu/img/posts/analyzing-ordinal-github-issues/2023-03-18-094526_1579x209_scrot.png" alt="simple openai api call">&lt;/p>
&lt;p>We generated an overview of the issues with the title rewritten to embed comments and other pieces of information.&lt;/p>
&lt;p>&lt;img src="https://6120.eu/img/posts/analyzing-ordinal-github-issues/2023-03-18-080232_3650x783_scrot.png" alt="">&lt;/p>
&lt;p>And even get some insights about which issues are hot topics.&lt;/p>
&lt;p>&lt;img src="https://6120.eu/img/posts/analyzing-ordinal-github-issues/2023-03-18-090208_1272x258_scrot.png" alt="">&lt;/p>
&lt;p>And give a clearer short overview of the above issue.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#f92672">&amp;#34;number&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1917&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;title&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Transactions are not confirmed&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;summary&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;{\&amp;#34;summary\&amp;#34;: \&amp;#34;User is experiencing issues with unconfirmed transactions due to small fee rate\&amp;#34;, \&amp;#34;sentiment\&amp;#34;: \&amp;#34;frustrated\&amp;#34;, \&amp;#34;labels\&amp;#34;: [\&amp;#34;wallet\&amp;#34;, \&amp;#34;user-support\&amp;#34;, \&amp;#34;transaction\&amp;#34;]}
&lt;/span>&lt;span style="color:#e6db74"> The user is frustrated because their transactions are not confirmed due to a small fee rate. They have included screenshots of their balance being debited without confirmation. The comment suggests setting the fee rate and waiting for confirmation, but the user is still looking for assistance. Relevant labels would be wallet, user-support, and transaction.&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;reactionGroups&amp;#34;&lt;/span>: {}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="conclusion">Conclusion&lt;/h1>
&lt;p>It&amp;rsquo;s a simple tool to help get an overview of the issues in a repository. It helps to get in the know before diving into the details, but there is some limitation to this simple example:&lt;/p>
&lt;ul>
&lt;li>The limitation encountered was the model, the only one available is GPT-3.5 which is the legacy one.&lt;/li>
&lt;li>The number of tokens you can feed the model; even with a larger model, there is a limitation. Therefore a compression on the body and comments could be applied when the number of tokens fed is close to the model limitation or some chunking.&lt;/li>
&lt;li>The prompt could be better, sometimes, it does not generate a valid JSON output, and labeling is too diverse, but it&amp;rsquo;s a good start; the required features are present.&lt;/li>
&lt;/ul>
&lt;p>Was it worth it? Yes, discovering a project is time-consuming and not very productive regarding deliverables.
It took ~6 hours to get a deliverable (classification) and the software to produce it (another deliverable). It gave us a quick overview of a large corpus of various issues in the repository. And the OPEX development cost was almost zero.&lt;/p>
&lt;p>&lt;img src="https://6120.eu/img/posts/analyzing-ordinal-github-issues/2023-03-18-090227_857x138_scrot.png" alt="cost">&lt;/p>
&lt;h2 id="links">Links&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Magicking/openai-issues-analysis/">Source code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Magicking/openai-issues-analysis/blob/main/classifiedIssue.json">Raw output of the analysis&lt;/a>, you can use &lt;a href="https://jqplay.org/s/6w5H0bE1uXi">jq play&lt;/a> to play with filtering to explore the data or your favorite JSON editor.&lt;/li>
&lt;/ul></content></item><item><title>StarkNet &amp; Cairo significant changes developer opinionated view</title><link>https://6120.eu/posts/cairo-changelog-pov/</link><pubDate>Fri, 03 Feb 2023 19:00:03 +0100</pubDate><guid>https://6120.eu/posts/cairo-changelog-pov/</guid><description>What&amp;rsquo;s new in Cairo? There have been a lot of changes since the Cairo language has been released. This is a developer opinionated list of the major changes since the first release, 0.6.2 (Dec 2021).
StarkWareLtd last release CairoLang v0.10.3 (Dec 5, 2022) also named Cairo 1.0.
Useful links:
CairoLang releases Useful info from StarkNet documentation StarkNet Community Call #32 Upcoming versions v0.10. (Cairo 1.0) (breaking changes version) Dec.</description><content>&lt;h1 id="whats-new-in-cairo">What&amp;rsquo;s new in Cairo?&lt;/h1>
&lt;p>There have been a lot of changes since the Cairo language has been released. This is a developer opinionated list of the major changes since the first release, 0.6.2 (Dec 2021).&lt;/p>
&lt;p>StarkWareLtd last release CairoLang v0.10.3 (Dec 5, 2022) also named Cairo 1.0.&lt;/p>
&lt;p>Useful links:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/starkware-libs/cairo-lang/releases">CairoLang releases&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.starknet.io/documentation/useful_info/">Useful info&lt;/a> from StarkNet documentation&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=CKYM25oicTA">StarkNet Community Call #32&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.starknet.io/documentation/starknet_versions/upcoming_versions/">Upcoming versions&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="v010-cairo-10">v0.10. (Cairo 1.0)&lt;/h1>
&lt;p>(breaking changes version)
&lt;strong>Dec. 5 2022&lt;/strong> v0.10.0-pre Pre-release&lt;/p>
&lt;p>Starknet has its core language modified, it&amp;rsquo;s now a Rusty lang, Starknet foresaw the future of Rust based smart-contract ecosystem (&lt;a href="https://news.coincu.com/90055-fall-of-terra/">Luna developers&lt;/a> and Solana)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>End statements with ;&lt;/p>
&lt;ul>
&lt;li>Note that new lines are still part of the language at this point, and you cannot put more than one instruction per line. This will change in Cairo1.0.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Use { … } for code blocks (instead of : and end)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add () around the condition of if statements&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Remove the member keyword in structs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Change comment to use // instead of #&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use &amp;hellip;, ap++ instead of &amp;hellip;; ap++ in low level Cairo code&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New transaction version&lt;/p>
&lt;ul>
&lt;li>Nonce are enforced as part of the transaction (bye bye UTXO model)&lt;/li>
&lt;li>Invoke execution object with &lt;a href="https://github.com/OpenZeppelin/cairo-contracts/blob/d12abf335f5c778fd19d6f99e91c099b40865deb/src/openzeppelin/account/presets/EthAccount.cairo#L81">&lt;strong>__validate__&lt;/strong>&lt;/a> and &lt;a href="https://github.com/OpenZeppelin/cairo-contracts/blob/d12abf335f5c778fd19d6f99e91c099b40865deb/src/openzeppelin/account/presets/EthAccount.cairo#L127">&lt;strong>__execute__&lt;/strong>&lt;/a> to differentiate between validation of the transaction (wether or not execution works (TODO: wild guess)) and execution that his pickup by another part of the process in the decentralized system(TODO: confirm)&lt;/li>
&lt;li>Declare function to send implementation code for registration for future instantiation&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Bridge Layer1 to Layer2&lt;/p>
&lt;ul>
&lt;li>New &lt;strong>fee&lt;/strong> field in &lt;a href="https://github.com/starkware-libs/cairo-lang/blob/54d7e92a703b3b5a1e07e9389608178129946efc/src/starkware/starknet/solidity/IStarknetMessagingEvents.sol#L9">LogMessageToL2 event&lt;/a> when executing L2 contract from L1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Tx simulation and fee estimation&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Support the EC-op builtin. to allows to verify ECDSA signatures&lt;/p>
&lt;/li>
&lt;li>
&lt;p>API: Remove entry_point_type field from transaction information&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="v09x">v0.9.x&lt;/h1>
&lt;p>Fees are now enforced on StarkNet, no more free candy!&lt;/p>
&lt;p>Contracts must be declared first and then instanciated through the new &lt;a href="https://starknet.io/docs/hello_starknet/deploying_from_contracts.html#the-deploy-system-call">deploy syscall&lt;/a> forcing 2 manual transactions for contracts deployed by EOA.&lt;/p>
&lt;h1 id="v081">v0.8.1&lt;/h1>
&lt;p>Fees are in now! What&amp;rsquo;s up with that &lt;a href="https://github.com/starkware-libs/cairo-lang/blob/4e233516f52477ad158bc81a86ec2760471c1b65/src/starkware/starknet/business_logic/transaction_fee.py">code&lt;/a> ? See more &lt;a href="https://starknet.io/documentation/fee-mechanism/#Introduction">here&lt;/a>.
&lt;img src="https://i.imgur.com/G2ZidCf.png" alt="">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>charge_fee &lt;img src="https://i.imgur.com/GnKEkFI.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>calculate_tx_fee_by_cairo_usage &lt;img src="https://i.imgur.com/wYIohf7.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/eth/StarknetMessaging.sol">L1 -&amp;gt; L2 message cancellation&lt;/a>
&lt;img src="https://i.imgur.com/P4UB8Wm.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>version&lt;/code> and &lt;code>max_fee&lt;/code> are part of the transaction structure now&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>__execute__&lt;/code> is now required mandatory entry point for account contract, see more &lt;a href="https://github.com/OpenZeppelin/cairo-contracts/blob/main/docs/Account.md#accounts">here&lt;/a>
&lt;img src="https://i.imgur.com/gIcuAdK.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added the cryptographic hash function &lt;a href="https://en.wikipedia.org/wiki/BLAKE_(hash_function)">blake2s&lt;/a> to the standard library&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="cairo">Cairo&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Meaningful error messaging(v0.7.0) including local variables and arguments
&lt;img src="https://i.imgur.com/AwjYaIV.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>High level memory allocation with the &lt;code>new&lt;/code> keyword in execution memory segment (whereas &lt;code>alloc&lt;/code> allocates a new memory segment)
&lt;img src="https://i.imgur.com/gFPTHzw.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Tuples and type aliases, will increase the pythonic vibes of Cairo even further
&lt;img src="https://i.imgur.com/Ya3bPcE.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fix for python 3.9&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="v07x">v0.7.x&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/starkware-libs/cairo-lang/blob/4e233516f52477ad158bc81a86ec2760471c1b65/src/starkware/starknet/services/api/messages.py#L80">Added a nonce for L1 to L2 message&lt;/a> this prevents sending the same message twice from the EVM world, e.g: calling a function.
&lt;img src="https://i.imgur.com/3SPa5Fz.png" alt="">&lt;/li>
&lt;/ul>
&lt;h1 id="addition-of-evm-compatibilities">Addition of EVM compatibilities&lt;/h1>
&lt;ul>
&lt;li>events are here !&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/rXdCLNc.png" alt="">
&lt;img src="https://i.imgur.com/uOzGLmA.png" alt="">&lt;/p>
&lt;p>(editor&amp;rsquo;s note: TheGraph but for StarkNet please.)&lt;/p>
&lt;ul>
&lt;li>delegate calls
prepend delegate_ to external contract function name or &lt;code>l1_handler&lt;/code>&lt;/li>
&lt;li>The &lt;code>__default__&lt;/code> entry point is introduced, it is similar to the Solidity fallback method as it is executed after missing on the function selector.&lt;/li>
&lt;li>The &lt;code>__l1_default__&lt;/code> entry point same as &lt;code>__default__&lt;/code> but for in-protocol message from the L1.&lt;/li>
&lt;/ul>
&lt;h2 id="new-syscalls">New syscalls&lt;/h2>
&lt;ul>
&lt;li>get_block_timestamp()
Returns a random number that sometimes appears to grow over time, currently around since 1970-01-01.
Notice of deprecation for get_tx_signature(), get_tx_info() is now preferred.&lt;/li>
&lt;/ul></content></item><item><title>In on Chain</title><link>https://6120.eu/drafts/in-on-chain/</link><pubDate>Sun, 29 Jan 2023 02:30:51 +0100</pubDate><guid>https://6120.eu/drafts/in-on-chain/</guid><description>In-chain refers to something that is stored and processed on the blockchain, while on-chain refers to something that is stored on the blockchain but processed off-chain. In the case of NFT artwork, in-chain would refer to the media being processed to its final form by the first execution layer, such as the EVM in Ethereum. On-chain would refer to the media being stored on the blockchain, but the processing and rendering of the artwork happens off-chain using JavaScript, for example, in real-time.</description><content>&lt;p>In-chain refers to something that is stored and processed on the blockchain, while on-chain refers to something that is stored on the blockchain but processed off-chain. In the case of NFT artwork, in-chain would refer to the media being processed to its final form by the first execution layer, such as the EVM in Ethereum. On-chain would refer to the media being stored on the blockchain, but the processing and rendering of the artwork happens off-chain using JavaScript, for example, in real-time.&lt;/p>
&lt;p>Some media formats, such as SVG, contain multiple data streams that may require different levels of processing, it can be rendered using rasterization techniques, but it can also be enhanced with CSS and/or JavaScript. This means that some parts of the image may be processed in-chain, while others may be processed off-chain.&lt;/p>
&lt;p>Additionally, depending on the context, the final form of the media may be different, it can be a raster image or a interactive vector image, so the processing can be different for each context and each final form. This can make it challenging to determine the appropriate level of in-chain and off-chain processing for certain types of media, and may require careful consideration of the specific requirements and constraints of the use case.&lt;/p>
&lt;p>Thus we can define in-chain NFT where the artwork does not require* turing complete processing post first on-chain execution (e.g: when tokenURI function return embbed audio/video in metadatas)
(as in mandatory). The processing capability being brought by the human user, and therefore, a NFT can be considered in-chain when it does not require post-chain processing, for example, in wallets, twitter profile pictures, and so on. On the other hand, NFTs that require Post-Chain Processing(PCP), for example, in browsers, desktop apps, or games, are considered on-chain NFTs.&lt;/p>
&lt;p>Example of possible artwork media types with possible Post-Chain Processing:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Media&lt;/th>
&lt;th>Audio&lt;/th>
&lt;th>Image&lt;/th>
&lt;th>PCP&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/Audio_Video_Interleave#">AVI&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/BMP_file_format">BMP&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/GIF#File_format">GIF&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/GlTF#GLB">GLB&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.khronos.org/assets/uploads/developers/library/overview/gltf-overview.pdf">GLTF&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/JPEG#Syntax_and_structure">JPG&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://https://en.wikipedia.org/wiki/MP4_file_format#Data_streams">MP4&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/WAV#">WAV&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/WebM#">WebM&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/Ogg#">OGG&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/Continuous_Media_Markup_Language">X&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/HTML#">HTML&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SVG">SVG&lt;/a>&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SVG_animation">X&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Examples projects by media type:&lt;/p>
&lt;p>Add OpenSea Link&lt;/p>
&lt;ul>
&lt;li>
&lt;p>In-chain BMP NFT is &lt;a href="https://etherscan.deth.net/address/0xd31fc221d2b0e0321c43e9f6824b26ebfff01d7d#code">Brotchain&lt;/a> NFT processing image&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In-chain WAV NFT is the &lt;a href="https://etherscan.deth.net/address/0xE114DCe59A333f8D351371F54188F92C287b73E6#code">Bleeps&lt;/a> NFT Waveform synthetizer&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>(It&amp;rsquo;s worth noting that the table is not an exhaustive list of all media types that can be used for NFT artwork)&lt;/p>
&lt;p>The concept of in-chain and on-chain NFTs refers to the storage and processing of digital artwork on the blockchain by smart-contracts following NFT standards. In-chain NFTs are those where the artwork does not require Post-Chain Processing and can be viewed using standard software or hardware. On the other hand, on-chain NFTs require post-chain processing, such as in browsers or desktop apps. The broad spectrum of possibilities for In-chain NFTs allows for greater compatibility across devices and opens up unexplored possibilities for on-chain computation, such as the ability to create more interactive and dynamic artwork, or the ability to use smart contracts to create unique, one-of-a-kind pieces.&lt;/p>
&lt;p>INSERT DIAGRAM from DRAW.IO&lt;/p>
&lt;p>NB: We could use the &lt;a href="https://arxiv.org/pdf/2109.14534.pdf">StarkNet Cairo CPU&lt;/a> intercheangibly with the EVM as long as the smart-contract follows NFT standards.&lt;/p>
&lt;p>More ressources:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.simondlr.com/posts/flavours-of-on-chain-svg-nfts-on-ethereum">Simon de la Rouviere&amp;rsquo;s Flavours of on-chain SVG blog post&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Support cours Ethereum Virtual Machine</title><link>https://6120.eu/posts/support-evm/</link><pubDate>Thu, 17 Mar 2022 21:50:00 +0100</pubDate><guid>https://6120.eu/posts/support-evm/</guid><description>Ceci est un support de cours sur l&amp;rsquo;EVM (Ethereum Virtual Machine) pour le cours de l&amp;rsquo;Ecole Supérieure d&amp;rsquo;Ingénieurs Léonard de Vinci (ESILV).
Il comprend du matériel de cours, des illustrations et des liens vers des ressources.
La durée du cours est de 3h, séparé en une lesson de 1h15 et des travaux dirigés de 1h15. La première partie est une introduction à la machine de Turing et sa correspondance aux processeurs de nos jours (rappel des connaissances), la seconde partie est une introduction à l&amp;rsquo;EVM et sa correspondance avec la machine de Turing.</description><content>&lt;p>Ceci est un support de cours sur l&amp;rsquo;EVM (Ethereum Virtual Machine) pour le cours de l&amp;rsquo;Ecole Supérieure d&amp;rsquo;Ingénieurs Léonard de Vinci (ESILV).&lt;/p>
&lt;p>Il comprend du matériel de cours, des illustrations et des liens vers des ressources.&lt;/p>
&lt;p>La durée du cours est de 3h, séparé en une lesson de 1h15 et des travaux dirigés de 1h15.
La première partie est une introduction à la machine de Turing et sa correspondance aux processeurs de nos jours (rappel des connaissances),
la seconde partie est une introduction à l&amp;rsquo;EVM et sa correspondance avec la machine de Turing.&lt;/p>
&lt;p>Les travaux pratiques consistent à observer le fonctionnement de l&amp;rsquo;EVM ainsi que la lecture des &lt;a href="https://www.evm.codes/">opcodes&lt;/a> au travers du debugger &lt;a href="https://remix.ethereum.org/">Remix&lt;/a> et à implémenter des opcodes directement dans un second temps.&lt;/p>
&lt;p>NB: Tenderly peut-être utilisé pour une meilleure observervation du fonctionnement de l&amp;rsquo;EVM sur la blockchain Ethereum mais est un peu plus long à mettre en place.&lt;/p>
&lt;h1 id="machine-de-turing">Machine de Turing&lt;/h1>
&lt;p>Machine de Turing
&lt;img src="https://6120.eu/img/posts/support-evm/mThs6b2.jpg" alt="">
&lt;a href="https://www.youtube.com/watch?v=L5O04P2ASRc&amp;amp;t=647s">https://www.youtube.com/watch?v=L5O04P2ASRc&amp;amp;t=647s&lt;/a>&lt;/p>
&lt;h1 id="ethereum-virtual-machine-evm">Ethereum Virtual Machine (EVM)&lt;/h1>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/ysIsVUG.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/Xba9Jwb.png" alt="">&lt;/p>
&lt;hr>
&lt;p>Lexiques
&lt;a href="https://github.com/asseth/yellowpaper/blob/7dd3ed26b6fe4b7a1b0394194ef268d01f9955b4/Paper.pdf">https://github.com/asseth/yellowpaper/blob/7dd3ed26b6fe4b7a1b0394194ef268d01f9955b4/Paper.pdf&lt;/a> Page 17&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/Lo0fP89.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/8cOg89m.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/vRJgorg.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/tMgjFeK.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/cnV0k5f.png" alt="">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://6120.eu/img/posts/support-evm/0J3imfd.png" alt="">&lt;/p>
&lt;hr>
&lt;p>Dive in &lt;a href="http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf">http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf&lt;/a>&lt;/p>
&lt;h2 id="illustration">Illustration&lt;/h2>
&lt;ul>
&lt;li>Illustration Turing machine =&amp;gt; &lt;a href="https://medium.com/creative-automata/classic-turing-machine-with-tape-erasure-e14870ad154e">https://medium.com/creative-automata/classic-turing-machine-with-tape-erasure-e14870ad154e&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf">http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="bibliography">Bibliography&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>🇫🇷 &lt;a href="https://github.com/asseth/yellowpaper/blob/7dd3ed26b6fe4b7a1b0394194ef268d01f9955b4/Paper.pdf">EIP-150 Yellowpaper&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>🇬🇧 &lt;a href="https://ethereum.github.io/yellowpaper/paper.pdf">Updated Yellowpaper&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/benjaminion/YellowPaper_CheatSheet">Yellowpaper Cheat Sheet&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf">Ethereum EVM Illustrated&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Execution model Page 56&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="implementation">Implementation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ethereum/go-ethereum/blob/master/core/vm/interpreter.go#L138">Implementation allocation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="travaux-dirigés">Travaux dirigés&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://remix.ethereum.org/">Remix&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.evm.codes/">EVM opcodes&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Solidity sources to analyze:&lt;/p>
&lt;ul>
&lt;li>Goal, observe the behavior of the EVM between the differents implementation functions of the same algorithm:
&lt;ul>
&lt;li>Sum of an array of uint.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-solidity" data-lang="solidity">&lt;span style="color:#75715e">// SPDX-License-Identifier: GPL-3.0
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">pragma solidity&lt;/span> &lt;span style="color:#f92672">&amp;gt;=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">4&lt;/span>.&lt;span style="color:#ae81ff">16&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">9&lt;/span>.&lt;span style="color:#ae81ff">0&lt;/span>;
&lt;span style="color:#66d9ef">library&lt;/span> VectorSum {
&lt;span style="color:#75715e">// This function is less efficient because the optimizer currently fails to
&lt;/span>&lt;span style="color:#75715e">// remove the bounds checks in array access.
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">sumSolidity&lt;/span>(&lt;span style="color:#66d9ef">uint&lt;/span>[] &lt;span style="color:#66d9ef">memory&lt;/span> data) &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">pure&lt;/span> &lt;span style="color:#66d9ef">returns&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> sum) {
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> data.length; &lt;span style="color:#f92672">++&lt;/span>i)
sum &lt;span style="color:#f92672">+=&lt;/span> data[i];
}
&lt;span style="color:#75715e">// We know that we only access the array in bounds, so we can avoid the check.
&lt;/span>&lt;span style="color:#75715e">// 0x20 needs to be added to an array because the first slot contains the
&lt;/span>&lt;span style="color:#75715e">// array length.
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">sumAsm&lt;/span>(&lt;span style="color:#66d9ef">uint&lt;/span>[] &lt;span style="color:#66d9ef">memory&lt;/span> data) &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">pure&lt;/span> &lt;span style="color:#66d9ef">returns&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> sum) {
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> data.length; &lt;span style="color:#f92672">++&lt;/span>i) {
&lt;span style="color:#66d9ef">assembly&lt;/span> {
sum &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(sum, &lt;span style="color:#a6e22e">mload&lt;/span>(&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#a6e22e">add&lt;/span>(data, &lt;span style="color:#ae81ff">0x20&lt;/span>), &lt;span style="color:#a6e22e">mul&lt;/span>(i, &lt;span style="color:#ae81ff">0x20&lt;/span>))))
}
}
}
&lt;span style="color:#75715e">// Same as above, but accomplish the entire code within inline assembly.
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">sumPureAsm&lt;/span>(&lt;span style="color:#66d9ef">uint&lt;/span>[] &lt;span style="color:#66d9ef">memory&lt;/span> data) &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">pure&lt;/span> &lt;span style="color:#66d9ef">returns&lt;/span> (&lt;span style="color:#66d9ef">uint&lt;/span> sum) {
&lt;span style="color:#66d9ef">assembly&lt;/span> {
&lt;span style="color:#75715e">// Load the length (first 32 bytes)
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">let&lt;/span> len &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">mload&lt;/span>(data)
&lt;span style="color:#75715e">// Skip over the length field.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Keep temporary variable so it can be incremented in place.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// NOTE: incrementing data would result in an unusable
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// data variable after this assembly block
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">let&lt;/span> dataElementLocation &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(data, &lt;span style="color:#ae81ff">0x20&lt;/span>)
&lt;span style="color:#75715e">// Iterate until the bound is not met.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">for&lt;/span>
{ &lt;span style="color:#f92672">let&lt;/span> end &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(dataElementLocation, &lt;span style="color:#a6e22e">mul&lt;/span>(len, &lt;span style="color:#ae81ff">0x20&lt;/span>)) }
&lt;span style="color:#a6e22e">lt&lt;/span>(dataElementLocation, end)
{ data &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(dataElementLocation, &lt;span style="color:#ae81ff">0x20&lt;/span>) }
{
sum &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(sum, &lt;span style="color:#a6e22e">mload&lt;/span>(dataElementLocation))
}
}
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="contact">Contact&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://twitter.com/magicking_">@magicking_&lt;/a>&lt;/li>
&lt;li>&lt;a href="mailto:s@6120.eu">s@6120.eu&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://6120.eu">https://6120.eu&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Altfury a remote wallet provider (GSaaS*) design document - Work In Progress</title><link>https://6120.eu/posts/altfury/</link><pubDate>Sat, 13 Feb 2021 19:00:03 +0100</pubDate><guid>https://6120.eu/posts/altfury/</guid><description>Motivationale With around 2000 DApps and more than 60.000 users, the promise of 27.000 tx/s with Ethereum 2.0 and people arguing for Infura centralizing the public Ethereum world there is call for alternative! Altfury aims to provide to anyone the ability to interact with DApps and any smart contract without the need of paying gas.
Your user don&amp;rsquo;t have a wallet?
You can let us take care of your keys and the burden to not forget and secure them while enjoying the DeFi space faster than ever.</description><content>&lt;h2 id="motivationale">Motivationale&lt;/h2>
&lt;p>With around &lt;a href="https://dappradar.com/rankings/protocol/ethereum/87">2000 DApps&lt;/a> and more than &lt;a href="https://dappradar.com/rankings/protocol/ethereum">60.000 users&lt;/a>, the promise of 27.000 tx/s with Ethereum 2.0 and people arguing for Infura centralizing the public Ethereum world there is call for alternative!
Altfury aims to provide to anyone the ability to interact with DApps and any smart contract without the need of paying gas.&lt;/p>
&lt;p>Your user don&amp;rsquo;t have a wallet?&lt;/p>
&lt;p>You can let us take care of your keys and the burden to not forget and secure them while enjoying the DeFi space faster than ever.
DApp developers, the Ethereum world to your users with only the change of your endpoint URL address.
Users, hassle free access to the DeFi world&lt;/p>
&lt;p>No burden to use a new SDK in your DApps, work with standard Wallet Connect (Uniswap &amp;amp; al)!
Peepz, just to go the website (optional install browser extension) pair up and go!&lt;/p>
&lt;p>*Gas Station As A Service (GSAAS)&lt;/p>
&lt;h1 id="intro">Intro&lt;/h1>
&lt;p>The goal of this document is to provide a design of a high-available service providing Ethereum JSON RPC endpoints over HTTP and HTTP WebSocket and other related services such as fee (tx) management to act as a drop-in repleacement (or plugin to existing wallet connectors).&lt;/p>
&lt;h3 id="technical-note">Technical note&lt;/h3>
&lt;p>In addition, the endpoint SHOULD allow:&lt;/p>
&lt;ul>
&lt;li>For unfunded Ethereum account to pass transaction on the blockchain under certain condition
Withhold transaction then&lt;/li>
&lt;li>Guaranteed transaction inclusion with low gas price fee
For this specific feature, there is multiple ways to achieve this
Pass transaction off-band to a partner miner pool that would accept transaction with a &lt;strong>gasPrice&lt;/strong> set at &lt;strong>0&lt;/strong> &lt;em>or&lt;/em> fund the account via a faucet to the &lt;strong>gasLimit&lt;/strong> x &lt;strong>gasPrice&lt;/strong> while withholding
the transaction until funding is done and then propagate it.&lt;/li>
&lt;/ul>
&lt;h2 id="definition">Definition&lt;/h2>
&lt;p>A remote wallet provider is a service that aims to help distant services to execute(read calls), sign(key control) and transmit transaction(write calls)&lt;/p>
&lt;p>It integrate seamlessly by emulating a blockchain state with a balance corresponding for the credit of each account creating an ephemeral blockchain network (next_view(state, account_balances)-&amp;gt;fork_view, a fork of the mainnet displaying accounts as if they have the corresponding amount making the experience seamless as&lt;/p>
&lt;h2 id="customers">Customers&lt;/h2>
&lt;ul>
&lt;li>Bots&lt;/li>
&lt;li>NoCode users&lt;/li>
&lt;li>User that click on interface (browser extension, &lt;a href="https://twitter.com/P3b7_/status/1361345964259352580?s=19">https://twitter.com/P3b7_/status/1361345964259352580?s=19&lt;/a>)&lt;/li>
&lt;li>User willing to invest to rely on this for automation&lt;/li>
&lt;li>User that do their on smart contract automation&lt;/li>
&lt;/ul>
&lt;p>Todo do market research to describe personas&lt;/p>
&lt;h2 id="future-of-work">Future of work&lt;/h2>
&lt;ul>
&lt;li>Provide services about key usage (defi liquidity mining, &amp;hellip;)&lt;/li>
&lt;/ul>
&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>SHOULD be as minimal as possible to have a low footprint/cost
(front-end requests (administration, user management, &amp;hellip;)).
Use go-ethereum as library to avoid technical debt as much as possible.&lt;/p>
&lt;p>-&amp;gt; Wondering if serverless could be a benefit if it were handling execution read calls, this might be costly if not self-hosted&lt;/p>
&lt;p>-&amp;gt; Browser extention to change the RPC endpoint easily
-&amp;gt; Ledger device with dedicated credit app
-&amp;gt; Website where account can be toped-up by XXX means&lt;/p>
&lt;h1 id="security">Security&lt;/h1>
&lt;p>Per ethereum account (extracted from transaction signature) whitelisting.
Per application(what), per logged user (who)
Anonymous user SHOULD be limited by IP(Handle IPv6 per /64 block?):&lt;/p>
&lt;ul>
&lt;li>Rate in second&lt;/li>
&lt;li>Total number of concurrent connection&lt;/li>
&lt;li>Time limit on connection&lt;/li>
&lt;/ul>
&lt;p>USER_TYPE:&lt;/p>
&lt;ul>
&lt;li>LOW_GASER&lt;/li>
&lt;li>TO_FUND_ACCOUNT&lt;/li>
&lt;li>ANONYMOUS&lt;/li>
&lt;/ul>
&lt;h1 id="new-usages-possible-out-of-that">New usages possible out of that&lt;/h1>
&lt;ul>
&lt;li>Send NFT anonymously via TornadoCash integration&lt;/li>
&lt;/ul>
&lt;h2 id="allowed-usage-pattern">Allowed usage pattern&lt;/h2>
&lt;ul>
&lt;li>Authorize (max amount?)&lt;/li>
&lt;li>Trade&lt;/li>
&lt;li>Trade&lt;/li>
&lt;li>&amp;hellip; max amount before security callbacks?&lt;/li>
&lt;/ul>
&lt;h2 id="regulatory-limits">Regulatory limits&lt;/h2>
&lt;p>Is this such a thing for DeFi?
Tax?&lt;/p>
&lt;h2 id="fraud-prevention--whitelisting-system">Fraud prevention / whitelisting system&lt;/h2>
&lt;p>Smart-contract based?&lt;/p>
&lt;h3 id="providing-an-ephemeral-ethereum-state">Providing an ephemeral ethereum state&lt;/h3>
&lt;ul>
&lt;li>Modify &lt;a href="https://github.com/ledgerwatch/turbo-geth/blob/master/consensus/ethash/sealer.go#L166">https://github.com/ledgerwatch/turbo-geth/blob/master/consensus/ethash/sealer.go#L166&lt;/a> to wait on a channel instead of searching for the nonce and set a MAGIC MixDigest to permit identification of a special block to be included on the canonical chain without verification&lt;/li>
&lt;li>Prevent MAGIC block propagation throught&lt;/li>
&lt;/ul>
&lt;h1 id="transaction-payment-to-miner">Transaction payment to miner&lt;/h1>
&lt;p>The payment is distributed to the block.coinbase each block containing private transaction (and potentially a lower than usual gas price)&lt;/p>
&lt;p>Todo expand idea of private transaction via on-chain payment -&amp;gt; find a settlement cost minimal (ticket+payment channel)&lt;/p>
&lt;h3 id="transaction-flow">Transaction flow&lt;/h3>
&lt;h4 id="write-flows">Write flows&lt;/h4>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">sequenceDiagram
participant User
participant EVM Service
participant Eth node
activate EVM Service
User-&amp;gt;&amp;gt;EVM Service: eth_sendRawTransaction
EVM Service-&amp;gt;&amp;gt;EVM Service: Classify user type
EVM Service-&amp;gt;EVM Service: Apply rate limit
opt if user is TO_FUND_ACCOUNT type
EVM Service-&amp;gt;EVM Service: Apply funding TX to txpool
end
opt if user is LOW_GASER
EVM Service-&amp;gt;EVM Service: Disable gasPrice limit
end
EVM Service-&amp;gt;EVM Service: Verify TX against txpool
activate Eth node
EVM Service--&amp;gt;&amp;gt;Eth node: Propagate funding transaction for TO_FUND_ACCOUNT user
EVM Service--&amp;gt;&amp;gt;EVM Service: Wait for funding settlement for TO_FUND_ACCOUNT user
alt Private or public transaction
EVM Service-&amp;gt;&amp;gt;Eth node: Propagate user transaction
deactivate Eth node
else
EVM Service--&amp;gt;&amp;gt;Miner pool: Dispatch transaction for LOW_GASER user
end
deactivate EVM Service
&lt;/code>&lt;/pre>&lt;h4 id="read-flows">Read flows&lt;/h4>
&lt;p>Todo&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>&lt;a href="https://docs.google.com/spreadsheets/d/1iOHnC1MkwcXxN-Gisk9nWeWIRfR6ZaWAXLtYL37NCzE/edit?pli=1#gid=0">Pricing&lt;/a>
&lt;a href="https://github.com/ethereum/wiki/wiki/JSON-RPC">https://github.com/ethereum/wiki/wiki/JSON-RPC&lt;/a>
&lt;a href="https://www.stateofthedapps.com/stats">https://www.stateofthedapps.com/stats&lt;/a>&lt;/p>
&lt;h2 id="ethereum-rpc">Ethereum RPC&lt;/h2>
&lt;h3 id="modified-rpc">Modified RPC&lt;/h3>
&lt;p>&lt;strong>eth_call&lt;/strong> due to &lt;code>gasPrice&lt;/code> parameter
&lt;strong>eth_estimateGas&lt;/strong> due to &lt;code>gasPrice&lt;/code> parameter&lt;/p>
&lt;h4 id="eth_gasprice">eth_gasPrice&lt;/h4>
&lt;p>Should reflect the gasPrice we want either low or high depending of the kind of transaction we expect to see either through a miner pool or pre-funding.&lt;/p>
&lt;h4 id="eth_sendrawtransaction">eth_sendRawTransaction&lt;/h4>
&lt;p>Custom implementation of this RPC, depending on USER_TYPE&lt;/p>
&lt;h3 id="non-stream-rpc">Non stream RPC&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>eth_accounts&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_blockNumber&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_call&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_chainId&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBalance&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBlockByHash&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBlockByNumber&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBlockTransactionCountByHash&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getBlockTransactionCountByNumber&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getCode&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getLogs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getStorageAt&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionByBlockHashAndIndex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionByBlockNumberAndIndex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionByHash&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionCount&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getTransactionReceipt&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getUncleByBlockHashAndIndex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getUncleByBlockNumberAndIndex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getUncleCountByBlockHash&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getUncleCountByBlockNumber&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_getWork&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_hashrate&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_mining&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_protocolVersion&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_submitWork&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eth_syncing&lt;/p>
&lt;/li>
&lt;li>
&lt;p>net_listening&lt;/p>
&lt;/li>
&lt;li>
&lt;p>net_peerCount&lt;/p>
&lt;/li>
&lt;li>
&lt;p>net_version&lt;/p>
&lt;/li>
&lt;li>
&lt;p>web3_clientVersion&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="streams-rpc">Streams RPC&lt;/h3>
&lt;ul>
&lt;li>eth_newFilter&lt;/li>
&lt;li>eth_newPendingTransactionFilter&lt;/li>
&lt;li>eth_getFilterChanges&lt;/li>
&lt;li>eth_getFilterLogs&lt;/li>
&lt;li>eth_uninstallFilter&lt;/li>
&lt;li>eth_subscribe&lt;/li>
&lt;li>eth_unsubscribe&lt;/li>
&lt;/ul>
&lt;h2 id="notes">Notes&lt;/h2>
&lt;ul>
&lt;li>Fast Transaction Pool, low latency viewer / transaction sender&lt;/li>
&lt;li>Connect to peers, fetch memory pool, behave as light relay node&lt;/li>
&lt;li>Provide transaction mempool view and fast transaction dispatching&lt;/li>
&lt;li>Populate a central database for constant time access via API (paid access ?)&lt;/li>
&lt;li>Monitor transaction to addresses, on update&lt;/li>
&lt;li>Callback to backend customers through a fast protocol (GRPC?REST?&amp;hellip;?)&lt;/li>
&lt;li>Trigger registered function (e.g: send transaction)&lt;/li>
&lt;li>World infrastructure required (node in each world, potentially costly + dev ops)&lt;/li>
&lt;li>Dashboard with world view of ethereum compatible blockchain&lt;/li>
&lt;li>Speed transaction sending for quick transaction dispatching&lt;/li>
&lt;li>Would require ethereum node modification&lt;/li>
&lt;/ul></content></item><item><title>Update from last blog</title><link>https://6120.eu/posts/wip/</link><pubDate>Fri, 03 Aug 2001 00:00:00 +0000</pubDate><guid>https://6120.eu/posts/wip/</guid><description>Work in progress™ Work in progress™ since 2001.</description><content>&lt;h1 id="work-in-progress">Work in progress™&lt;/h1>
&lt;p>Work in progress™ since &lt;a href="https://web.archive.org/web/20011203211125/http://progcity.free.fr/">2001&lt;/a>.&lt;/p></content></item></channel></rss>